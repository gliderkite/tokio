var N=null,E="",T="t",U="u",searchIndex={};
var R=["Creates a future which will open a file for reading and…","Queries the file system metadata for a path.","metadata","set_permissions","permissions","openoptions","create","tokio::fs","An error returned when an operation could not be completed…","stderr","result","context","registration","poll_read_ready","poll_write_ready","into_inner","get_ref","get_mut","get_pin_mut","with_capacity","Returns a reference to the internally buffered data.","Gets a reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Read bytes from a source.","Pull some bytes from this source into the specified…","read_to_string","An extension trait which adds utility methods to…","seekfrom","Writes an unsigned 8-bit integer to the underlying writer.","shutdown","ReadHalf","WriteHalf","tokio::net","from_std","tcplistener","socketaddr","incoming","tosocketaddrs","tcpstream","local_addr","option","duration","Gets the value of the `IP_TTL` option for this socket.","Sets the value for the `IP_TTL` option on this socket.","udpsocket","Returns a future that sends data on the socket to the…","set_ttl","ipv4addr","ipv6addr","tokio::net::udp","reuniteerror","recv_from","Returns a future that receives a single datagram on the…","Returns a future that receives a single datagram message…","Attempts to put the two \"halves\" of a `UdpSocket` back…","Incoming","unixdatagram","connect","send_to","Receives data from the socket.","Returns the local address that this socket is bound to.","peer_addr","unixlistener","take_error","Returns the value of the `SO_ERROR` option.","Returns a stream over the connections being received on…","unixstream","Creates an unnamed pair of connected sockets.","Shuts down the read, write, or both halves of this…","AsyncBufRead","Read bytes asynchronously.","poll_fill_buf","Attempt to return the contents of the internal buffer,…","Tells this buffer that `amt` bytes have been consumed from…","AsyncRead","prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…","poll_read","tokio::prelude","Attempt to read from the `AsyncRead` into `buf`.","poll_read_buf","AsyncWrite","Writes bytes asynchronously.","poll_write","Attempt to write bytes from `buf` into the object.","poll_flush","Attempt to flush the object, ensuring that any buffered…","poll_shutdown","Initiates or attempts to shut down this writer, returning…","poll_write_buf","Write a `Buf` into this value, returning how many bytes…","command","The Tokio runtime.","runtime","joinhandle","Spawn a future onto the Tokio runtime.","Enter the runtime context","tryrecverror","trysenderror","Receive the next value for this receiver.","Attempts to return a pending value on this receiver…","Closes the receiving half of a channel, without dropping it.","senderror","tokio::sync","trylockerror","mutexguard","RecvError","TryRecvError","tokio::sync::oneshot","try_recv","Receiver","SendError","tokio::sync::watch","broadcast","Spawns a new asynchronous task, returning a `JoinHandle`…","spawn_local","Creates new `Interval` that yields with interval of…","interval","Require a `Future` to complete before the specified…","A queue of delayed elements.","DelayQueue","delayqueue","Sets the delay of the item associated with `key` to expire…","tokio::time","instant","Returns `true` if the error was caused by the timer being…","Returns the amount of time elapsed from another instant to…","borrow_mut","try_from","try_into","clone_into","type_id","try_poll_next","tokio::net::tcp","to_string","tokio::net::unix","to_owned","tokio::process","try_poll","tokio::runtime","tokio::signal::unix","tokio::sync::mpsc","tokio::sync::mpsc::error","tokio::sync::oneshot::error","tokio::sync::watch::error","tokio::task","tokio::time::delay_queue","errorkind","formatter","ordering","partial_cmp","consume","start_seek","poll_complete","default","signalkind","bufwriter","bufreader","add_assign","sub_assign","Consumes stream, returning the tokio I/O object.","as_raw_fd","poll_next","read_until","Read all bytes into `buf` until the delimiter `byte` or…","readuntil","read_line","Read all bytes until a newline (the 0xA byte) is reached,…","Returns a stream of the contents of this reader split on…","Returns a stream over the lines of this reader. This…","Create a new `AsyncRead` instance that chains this stream…","read_exact","Read the exact number of bytes required to fill `buf`.","readexact","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16-bit integer in big-endian order from…","Reads a signed 16-bit integer in big-endian order from the…","Reads an unsigned 32-bit integer in big-endian order from…","Reads a signed 32-bit integer in big-endian order from the…","Reads an unsigned 64-bit integer in big-endian order from…","Reads an signed 64-bit integer in big-endian order from…","read_u128","Reads an unsigned 128-bit integer in big-endian order from…","read_i128","Reads an signed 128-bit integer in big-endian order from…","read_to_end","Read all bytes until EOF in this source, placing them into…","readtoend","Read all bytes until EOF in this source, appending them to…","readtostring","Creates an adaptor which reads at most `limit` bytes from…","Creates a future which will seek an IO object, and then…","Write a buffer into this writer, returning how many bytes…","write_buf","Write a buffer into this writer, advancing the buffer's…","write_all","Attempts to write an entire buffer into this writer.","write_u16","Writes an unsigned 16-bit integer in big-endian order to…","write_i16","Writes a signed 16-bit integer in big-endian order to the…","write_u32","Writes an unsigned 32-bit integer in big-endian order to…","write_i32","Writes a signed 32-bit integer in big-endian order to the…","write_u64","Writes an unsigned 64-bit integer in big-endian order to…","write_i64","Writes an signed 64-bit integer in big-endian order to the…","write_u128","Writes an unsigned 128-bit integer in big-endian order to…","writeu128","write_i128","Writes an signed 128-bit integer in big-endian order to…","writei128","Flush this output stream, ensuring that all intermediately…","Shuts down the output stream, ensuring that the value can…","Creates a new `Duration` from the specified number of…","Returns the fractional part of this `Duration`, in whole…","checked_add","checked_sub","Returns the number of seconds contained by this `Duration`…","OpenOptions","ErrorKind","PollEvented","Registration","BufReader","BufStream","BufWriter","AsyncSeek","AsyncBufReadExt","AsyncReadExt","AsyncSeekExt","AsyncWriteExt","TcpListener","TcpStream","ReuniteError","UdpSocket","UnixDatagram","UnixListener","UnixStream","SignalKind","BarrierWaitResult","UnboundedReceiver","UnboundedSender","TrySendError","ChildStdin","ChildStdout","ChildStderr","MutexGuard","ClosedError","JoinError","JoinHandle","Marks async function to be executed by selected runtime.","Marks async function to be executed by runtime, suitable…","block_on","Sequence a `read` operation.","Sequence a `write` operation.","tokio_test","tokio_test::io","tokio_test::task","deref_mut","tlsconnector","tlsacceptor","TlsStream","TlsConnector","TlsAcceptor","read_buf","Provides a `Stream` and `Sink` interface for reading and…","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","read_buffer","Returns a reference to the read buffer.","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","Creates a new length delimited codec builder with default…","builder","max_frame_length","lengthdelimitedcodec","framedread","framedwrite","tokio_util::codec","bytesmut","asyncread","asyncwrite","tokio_util","A unified `Stream` and `Sink` interface to an underlying…","tokio_util::codec::length_delimited","tokio_util::udp","linescodecerror","decode_eof","bytescodec","linescodec","poll_ready","start_send","poll_close","A default method available to be called when there are no…","FramedParts","LinesCodecError","BytesCodec","FramedRead","FramedWrite","LengthDelimitedCodec","Builder","LinesCodec","UdpFramed","LengthDelimitedCodecError"];
searchIndex["test_cat"]={"doc":"A cat-like utility that can be used as a subprocess to…","i":[],"p":[]};
searchIndex["tests_build"]={"doc":E,"i":[],"p":[]};
searchIndex["tests_integration"]={"doc":E,"i":[],"p":[]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio",R[256],N,N],[23,"test",E,R[257],N,N],[5,"spawn",E,R[116],N,[[[T]],[R[96]]]],[0,"fs",E,"Asynchronous file and standard stream adaptation.",N,N],[3,"File",R[7],"A reference to an open file on the filesystem.",N,N],[3,R[225],E,"Options and flags which can be used to configure how a…",N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[5,"create_dir",E,"Creates a new, empty directory at the provided path",N,[[]]],[5,"create_dir_all",E,"Recursively create a directory and all of its parent…",N,[[]]],[5,"hard_link",E,"Creates a new hard link on the filesystem.",N,[[]]],[5,R[2],E,R[1],N,[[]]],[5,"read",E,R[0],N,[[]]],[5,"read_dir",E,"Returns a stream over the entries within a directory.",N,[[]]],[5,"read_link",E,"Reads a symbolic link, returning the file that the link…",N,[[]]],[5,R[26],E,R[0],N,[[]]],[5,"remove_dir",E,"Removes an existing, empty directory.",N,[[]]],[5,"remove_dir_all",E,"Removes a directory at this path, after removing all its…",N,[[]]],[5,"remove_file",E,"Removes a file from the filesystem.",N,[[]]],[5,"rename",E,"Rename a file or directory to a new name, replacing the…",N,[[]]],[5,R[3],E,"Changes the permissions found on a file or a directory.",N,[[[R[4]]]]],[5,"symlink_metadata",E,R[1],N,[[]]],[5,"write",E,"Creates a future that will open a file for writing and…",N,[[["unpin"],["asref"]]]],[11,"open",E,"Attempts to open a file in read-only mode.",0,[[]]],[11,R[6],E,"Opens a file in write-only mode.",0,[[]]],[11,R[34],E,"Convert a [`std::fs::File`][std] to a…",0,[[["file"]],["file"]]],[11,"sync_all",E,"Attempts to sync all OS-internal metadata to disk.",0,[[["self"]]]],[11,"sync_data",E,"This function is similar to `sync_all`, except that it may…",0,[[["self"]]]],[11,"set_len",E,"Truncates or extends the underlying file, updating the…",0,[[["u64"],["self"]]]],[11,R[2],E,"Queries metadata about the underlying file.",0,[[["self"]]]],[11,"try_clone",E,"Create a new `File` instance that shares the same…",0,[[["self"]]]],[11,"into_std",E,"Destructures `File` into a [`std::fs::File`][std]. This…",0,[[]]],[11,"try_into_std",E,"Tries to immediately destructure `File` into a…",0,[[],[[R[10],["file"]],["file"]]]],[11,R[3],E,"Changes the permissions on the underlying file.",0,[[["self"],[R[4]]]]],[11,"new",E,"Creates a blank new set of options ready for configuration.",1,[[],[R[5]]]],[11,"read",E,"See the underlying [`read`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"write",E,"See the underlying [`write`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"append",E,"See the underlying [`append`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"truncate",E,"See the underlying [`truncate`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,R[6],E,"See the underlying [`create`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"create_new",E,"See the underlying [`create_new`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"open",E,"Opens a file at `path` with the options specified by `self`.",1,[[["self"]]]],[0,"os",E,"OS-specific functionality.",N,N],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",N,N],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",N,[[]]],[11,"next_entry",R[7],"Returns the next entry in the directory stream.",2,[[["self"]]]],[11,"path",E,"Returns the full path to the file that this entry…",3,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",3,[[["self"]],["osstring"]]],[11,R[2],E,"Return the metadata for the file that this entry points at.",3,[[["self"]]]],[11,"file_type",E,"Return the file type for the file that this entry points at.",3,[[["self"]]]],[0,"io","tokio","Traits, helpers, and type definitions for asynchronous I/O…",N,N],[3,"Error",R[77],"The error type for I/O operations of the [`Read`],…",N,N],[4,R[226],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",4,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",4,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",4,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",4,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",4,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",4,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",4,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",4,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",4,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",4,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",4,N],[13,"InvalidInput",E,"A parameter was incorrect.",4,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",4,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",4,N],[13,"WriteZero",E,R[8],4,N],[13,"Interrupted",E,"This operation was interrupted.",4,N],[13,"Other",E,"Any I/O error not part of this list.",4,N],[13,"UnexpectedEof",E,R[8],4,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[3,R[227],E,"Associates an I/O resource that implements the…",N,N],[3,R[228],E,"Associates an I/O resource with the reactor instance that…",N,N],[3,"Stderr",E,"A handle to the standard error stream of a process.",N,N],[3,"Stdin",E,"A handle to the standard input stream of a process.",N,N],[3,"Stdout",E,"A handle to the standard output stream of a process.",N,N],[3,R[31],E,"The readable half of a value returned from `split`.",N,N],[3,R[32],E,"The writable half of a value returned from `split`.",N,N],[3,"Seek",E,"Future for the `seek` method.",N,N],[3,R[229],E,"The `BufReader` struct adds buffering to any reader.",N,N],[3,R[230],E,"Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",N,N],[3,R[231],E,"Wraps a writer and buffers its output.",N,N],[3,"Copy",E,"A future that asynchronously copies the entire contents of…",N,N],[3,"Empty",E,"This struct is generally created by calling [`empty`].…",N,N],[3,"Lines",E,"Stream for the `lines` method.",N,N],[3,"Repeat",E,"An async reader which yields one byte over and over and…",N,N],[3,"Sink",E,"An async writer which will move data into the void.",N,N],[3,"Split",E,"Stream for the `split` method.",N,N],[3,"Take",E,"Stream for the `take` method.",N,N],[5,R[9],E,"Constructs a new handle to the standard error of the…",N,[[],[R[9]]]],[5,"stdin",E,"Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[5,"stdout",E,"Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[5,"split",E,"Split a single value implementing `AsyncRead + AsyncWrite`…",N,[[[T]]]],[5,"copy",E,"Asynchronously copies the entire contents of a reader into…",N,[[["r"],["w"]],[["copy"],["sized"]]]],[5,"empty",E,"Creates a new empty async reader.",N,[[],["empty"]]],[5,"repeat",E,"Creates an instance of an async reader that infinitely…",N,[[["u8"]],["repeat"]]],[5,"sink",E,"Creates an instance of an async writer which will…",N,[[],["sink"]]],[11,"new",E,"Creates a new `PollEvented` associated with the default…",5,[[["e"]],[R[10]]]],[11,R[16],E,"Returns a shared reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,R[17],E,"Returns a mutable reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,R[15],E,"Consumes self, returning the inner I/O object",5,[[],[R[10]]]],[11,R[13],E,"Check the I/O resource's read readiness state.",5,[[["self"],["ready"],[R[11]]],[[R[10],["ready"]],["poll",[R[10]]]]]],[11,"clear_read_ready",E,"Clears the I/O resource's read readiness state and…",5,[[["self"],["ready"],[R[11]]],[R[10]]]],[11,R[14],E,"Check the I/O resource's write readiness state.",5,[[["self"],[R[11]]],[[R[10],["ready"]],["poll",[R[10]]]]]],[11,"clear_write_ready",E,"Resets the I/O resource's write readiness state and…",5,[[["self"],[R[11]]],[R[10]]]],[11,"new",E,"Register the I/O resource with the default reactor.",6,[[[T]],[[R[10],[R[12]]],[R[12]]]]],[11,"deregister",E,"Deregister the I/O resource from the reactor it is…",6,[[["self"],[T]],[R[10]]]],[11,R[13],E,"Poll for events on the I/O resource's read readiness stream.",6,[[["self"],[R[11]]],[[R[10],["ready"]],["poll",[R[10]]]]]],[11,"take_read_ready",E,"Consume any pending read readiness event.",6,[[["self"]],[[R[10],[R[41]]],[R[41],["ready"]]]]],[11,R[14],E,"Poll for events on the I/O resource's write readiness…",6,[[["self"],[R[11]]],[[R[10],["ready"]],["poll",[R[10]]]]]],[11,"take_write_ready",E,"Consume any pending write readiness event.",6,[[["self"]],[[R[10],[R[41]]],[R[41],["ready"]]]]],[11,"unsplit",E,"Reunite with a previously split `WriteHalf`.",7,[[["writehalf"]],[T]]],[11,"new",E,"Creates a new `BufReader` with a default buffer capacity.…",8,[[["r"]],["self"]]],[11,R[19],E,"Creates a new `BufReader` with the specified buffer…",8,[[["usize"],["r"]],["self"]]],[11,R[16],E,R[21],8,[[["self"]],["r"]]],[11,R[17],E,R[22],8,[[["self"]],["r"]]],[11,R[18],E,R[23],8,[[["pin"],["self"]],[["pin"],["r"]]]],[11,R[15],E,"Consumes this `BufWriter`, returning the underlying reader.",8,[[],["r"]]],[11,"buffer",E,R[20],8,[[["self"]]]],[11,"new",E,"Wrap a type in both [`BufWriter`] and [`BufReader`].",9,[[["rw"]],["bufstream"]]],[11,R[16],E,"Gets a reference to the underlying I/O object.",9,[[["self"]],["rw"]]],[11,R[17],E,"Gets a mutable reference to the underlying I/O object.",9,[[["self"]],["rw"]]],[11,R[18],E,"Gets a pinned mutable reference to the underlying I/O…",9,[[["pin"],["self"]],[["rw"],["pin"]]]],[11,R[15],E,"Consumes this `BufStream`, returning the underlying I/O…",9,[[],["rw"]]],[11,"new",E,"Creates a new `BufWriter` with a default buffer capacity.…",10,[[["w"]],["self"]]],[11,R[19],E,"Creates a new `BufWriter` with the specified buffer…",10,[[["w"],["usize"]],["self"]]],[11,R[16],E,"Gets a reference to the underlying writer.",10,[[["self"]],["w"]]],[11,R[17],E,"Gets a mutable reference to the underlying writer.",10,[[["self"]],["w"]]],[11,R[18],E,"Gets a pinned mutable reference to the underlying writer.",10,[[["pin"],["self"]],[["pin"],["w"]]]],[11,R[15],E,"Consumes this `BufWriter`, returning the underlying writer.",10,[[],["w"]]],[11,"buffer",E,R[20],10,[[["self"]]]],[11,"next_line",E,"Returns the next line in the stream.",11,[[["self"]]]],[11,"next_segment",E,"Returns the next segment in the stream.",12,[[["self"]]]],[11,"limit",E,"Returns the remaining number of bytes that can be read…",13,[[["self"]],["u64"]]],[11,"set_limit",E,"Sets the number of bytes that can be read before this…",13,[[["self"],["u64"]]]],[11,R[16],E,R[21],13,[[["self"]],["r"]]],[11,R[17],E,R[22],13,[[["self"]],["r"]]],[11,R[18],E,R[23],13,[[["pin"],["self"]],[["pin"],["r"]]]],[11,R[15],E,"Consumes the `Take`, returning the wrapped reader.",13,[[],["r"]]],[8,R[70],E,R[71],N,N],[10,R[72],E,R[73],14,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[10,R[153],E,R[74],14,[[["pin"],["self"],["usize"]]]],[8,R[75],E,R[24],N,N],[11,R[76],E,R[78],15,[[["self"]],["bool"]]],[10,R[79],E,R[81],15,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[82],E,R[25],15,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[8,R[232],E,"Seek bytes asynchronously.",N,N],[10,R[154],E,"Attempt to seek to an offset, in bytes, in a stream.",16,[[["self"],[R[28]],["pin"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[10,R[155],E,"Wait for a seek operation to complete.",16,[[["pin"],["self"],[R[11]]],[[R[10],["u64"]],["poll",[R[10]]]]]],[8,R[83],E,R[84],N,N],[10,R[85],E,R[86],17,[[["self"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[10,R[87],E,R[88],17,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[10,R[89],E,R[90],17,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[91],E,R[92],17,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[8,R[233],E,R[27],N,N],[11,R[165],E,R[166],18,[[["vec"],["self"],["u8"]],[R[167]]]],[11,R[168],E,R[169],18,[[["self"],["string"]],["readline"]]],[11,"split",E,R[170],18,[[["u8"]],["split"]]],[11,"lines",E,R[171],18,[[],["lines"]]],[8,R[234],E,R[24],N,N],[11,"chain",E,R[172],19,[[["r"]],["chain"]]],[11,"read",E,R[25],19,[[["self"]],["read"]]],[11,R[270],E,R[25],19,[[["b"],["self"]],["readbuf"]]],[11,R[173],E,R[174],19,[[["self"]],[R[175]]]],[11,"read_u8",E,R[176],19,[[["self"]],[["readu8"],["self"]]]],[11,"read_i8",E,R[177],19,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16",E,R[178],19,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16",E,R[179],19,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32",E,R[180],19,[[["self"]],[["readu32"],["self"]]]],[11,"read_i32",E,R[181],19,[[["self"]],[["self"],["readi32"]]]],[11,"read_u64",E,R[182],19,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64",E,R[183],19,[[["self"]],[["readi64"],["self"]]]],[11,R[184],E,R[185],19,[[["self"]],[["readu128"],["self"]]]],[11,R[186],E,R[187],19,[[["self"]],[["readi128"],["self"]]]],[11,R[188],E,R[189],19,[[["vec"],["self"]],[R[190]]]],[11,R[26],E,R[191],19,[[["self"],["string"]],[R[192]]]],[11,"take",E,R[193],19,[[["u64"]],["take"]]],[8,R[235],E,R[27],N,N],[11,"seek",E,R[194],20,[[["self"],[R[28]]],["seek"]]],[8,R[236],E,"Write bytes to a sink.",N,N],[11,"write",E,R[195],21,[[["self"]],["write"]]],[11,R[196],E,R[197],21,[[["b"],["self"]],["writebuf"]]],[11,R[198],E,R[199],21,[[["self"]],["writeall"]]],[11,"write_u8",E,R[29],21,[[["self"],["u8"]],[["writeu8"],["self"]]]],[11,"write_i8",E,R[29],21,[[["i8"],["self"]],[["self"],["writei8"]]]],[11,R[200],E,R[201],21,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,R[202],E,R[203],21,[[["self"],["i16"]],[["writei16"],["self"]]]],[11,R[204],E,R[205],21,[[["u32"],["self"]],[["writeu32"],["self"]]]],[11,R[206],E,R[207],21,[[["self"],["i32"]],[["writei32"],["self"]]]],[11,R[208],E,R[209],21,[[["self"],["u64"]],[["self"],["writeu64"]]]],[11,R[210],E,R[211],21,[[["i64"],["self"]],[["writei64"],["self"]]]],[11,R[212],E,R[213],21,[[["self"],["u128"]],[["self"],[R[214]]]]],[11,R[215],E,R[216],21,[[["i128"],["self"]],[["self"],[R[217]]]]],[11,"flush",E,R[218],21,[[["self"]],["flush"]]],[11,R[30],E,R[219],21,[[["self"]],[R[30]]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[237],R[33],"A TCP socket server, listening for connections.",N,N],[3,R[238],E,"A TCP stream between a local and a remote socket.",N,N],[3,R[240],E,"A UDP socket",N,N],[3,R[241],E,"An I/O object representing a Unix datagram socket.",N,N],[3,R[242],E,"A Unix socket which can accept connections from other Unix…",N,N],[3,R[243],E,"A structure representing a connected Unix socket.",N,N],[0,"tcp",E,"TCP utility types",N,N],[3,R[56],R[135],"Stream returned by the `TcpListener::incoming` function…",N,N],[3,R[31],E,"Read half of a `TcpStream`.",N,N],[3,R[32],E,"Write half of a `TcpStream`.",N,N],[11,"bind",R[33],"Creates a new TcpListener which will be bound to the…",22,[[[R[38]]]]],[11,"accept",E,"Accept a new incoming connection from this listener.",22,[[["self"]]]],[11,R[34],E,"Create a new TCP listener from the standard library's TCP…",22,[[[R[35]]],[[R[10],[R[35]]],[R[35]]]]],[11,R[40],E,"Returns the local address that this listener is bound to.",22,[[["self"]],[[R[10],[R[36]]],[R[36]]]]],[11,R[37],E,R[66],22,[[["self"]],[R[37]]]],[11,"ttl",E,R[43],22,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,R[47],E,R[44],22,[[["self"],["u32"]],[R[10]]]],[11,R[58],E,"Opens a TCP connection to a remote host.",23,[[[R[38]]]]],[11,R[34],E,"Create a new `TcpStream` from a `std::net::TcpStream`.",23,[[[R[39]]],[[R[39]],[R[10],[R[39]]]]]],[11,R[40],E,"Returns the local address that this stream is bound to.",23,[[["self"]],[[R[10],[R[36]]],[R[36]]]]],[11,R[62],E,"Returns the remote address that this stream is connected to.",23,[[["self"]],[[R[10],[R[36]]],[R[36]]]]],[11,"poll_peek",E,"Attempt to receive data on the socket, without removing…",23,[[["self"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,"peek",E,"Receives data on the socket from the remote address to…",23,[[["self"]]]],[11,R[30],E,R[69],23,[[["self"],[R[30]]],[R[10]]]],[11,"nodelay",E,"Gets the value of the `TCP_NODELAY` option on this socket.",23,[[["self"]],[["bool"],[R[10],["bool"]]]]],[11,"set_nodelay",E,"Sets the value of the `TCP_NODELAY` option on this socket.",23,[[["self"],["bool"]],[R[10]]]],[11,"recv_buffer_size",E,"Gets the value of the `SO_RCVBUF` option on this socket.",23,[[["self"]],[[R[10],["usize"]],["usize"]]]],[11,"set_recv_buffer_size",E,"Sets the value of the `SO_RCVBUF` option on this socket.",23,[[["self"],["usize"]],[R[10]]]],[11,"send_buffer_size",E,"Gets the value of the `SO_SNDBUF` option on this socket.",23,[[["self"]],[[R[10],["usize"]],["usize"]]]],[11,"set_send_buffer_size",E,"Sets the value of the `SO_SNDBUF` option on this socket.",23,[[["self"],["usize"]],[R[10]]]],[11,"keepalive",E,"Returns whether keepalive messages are enabled on this…",23,[[["self"]],[[R[41],[R[42]]],[R[10],[R[41]]]]]],[11,"set_keepalive",E,"Sets whether keepalive messages are enabled to be sent on…",23,[[["self"],[R[41],[R[42]]],[R[42]]],[R[10]]]],[11,"ttl",E,R[43],23,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,R[47],E,R[44],23,[[["self"],["u32"]],[R[10]]]],[11,"linger",E,"Reads the linger duration for this socket by getting the…",23,[[["self"]],[[R[41],[R[42]]],[R[10],[R[41]]]]]],[11,"set_linger",E,"Sets the linger duration of this socket by setting the…",23,[[["self"],[R[41],[R[42]]],[R[42]]],[R[10]]]],[11,"split",E,"Split a `TcpStream` into a read half and a write half,…",23,[[["self"]]]],[0,"udp",E,"UDP utility types.",N,N],[3,"RecvHalf",R[50],"The recv half after `split`.",N,N],[3,"SendHalf",E,"The send half after `split`.",N,N],[3,R[239],E,"Error indicating two halves were not from the same socket,…",N,N],[12,"0",E,E,24,N],[12,"1",E,E,24,N],[11,"bind",R[33],"This function will create a new UDP socket and attempt to…",25,[[[R[38]]]]],[11,R[34],E,"Creates a new `UdpSocket` from the previously bound socket…",25,[[[R[45]]],[[R[10],[R[45]]],[R[45]]]]],[11,"split",E,"Split the `UdpSocket` into a receive half and a send half.…",25,[[]]],[11,R[40],E,R[61],25,[[["self"]],[[R[10],[R[36]]],[R[36]]]]],[11,R[58],E,"Connects the UDP socket setting the default destination…",25,[[["self"],[R[38]]]]],[11,"send",E,R[46],25,[[["self"]]]],[11,"recv",E,R[54],25,[[["self"]]]],[11,R[59],E,R[46],25,[[[R[38]],["self"]]]],[11,R[52],E,R[53],25,[[["self"]]]],[11,R[115],E,"Gets the value of the `SO_BROADCAST` option for this socket.",25,[[["self"]],[["bool"],[R[10],["bool"]]]]],[11,"set_broadcast",E,"Sets the value of the `SO_BROADCAST` option for this socket.",25,[[["self"],["bool"]],[R[10]]]],[11,"multicast_loop_v4",E,"Gets the value of the `IP_MULTICAST_LOOP` option for this…",25,[[["self"]],[["bool"],[R[10],["bool"]]]]],[11,"set_multicast_loop_v4",E,"Sets the value of the `IP_MULTICAST_LOOP` option for this…",25,[[["self"],["bool"]],[R[10]]]],[11,"multicast_ttl_v4",E,"Gets the value of the `IP_MULTICAST_TTL` option for this…",25,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,"set_multicast_ttl_v4",E,"Sets the value of the `IP_MULTICAST_TTL` option for this…",25,[[["self"],["u32"]],[R[10]]]],[11,"multicast_loop_v6",E,"Gets the value of the `IPV6_MULTICAST_LOOP` option for…",25,[[["self"]],[["bool"],[R[10],["bool"]]]]],[11,"set_multicast_loop_v6",E,"Sets the value of the `IPV6_MULTICAST_LOOP` option for…",25,[[["self"],["bool"]],[R[10]]]],[11,"ttl",E,R[43],25,[[["self"]],[[R[10],["u32"]],["u32"]]]],[11,R[47],E,R[44],25,[[["self"],["u32"]],[R[10]]]],[11,"join_multicast_v4",E,"Executes an operation of the `IP_ADD_MEMBERSHIP` type.",25,[[["self"],[R[48]]],[R[10]]]],[11,"join_multicast_v6",E,"Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",25,[[["self"],["u32"],[R[49]]],[R[10]]]],[11,"leave_multicast_v4",E,"Executes an operation of the `IP_DROP_MEMBERSHIP` type.",25,[[["self"],[R[48]]],[R[10]]]],[11,"leave_multicast_v6",E,"Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",25,[[["self"],["u32"],[R[49]]],[R[10]]]],[11,"reunite",R[50],R[55],26,[[["sendhalf"]],[[R[10],[R[45],R[51]]],[R[51]],[R[45]]]]],[11,R[52],E,R[53],26,[[["self"]]]],[11,"recv",E,R[54],26,[[["self"]]]],[11,"reunite",E,R[55],27,[[["recvhalf"]],[[R[10],[R[45],R[51]]],[R[51]],[R[45]]]]],[11,R[59],E,R[46],27,[[[R[36]],["self"]]]],[11,"send",E,R[46],27,[[["self"]]]],[0,"unix",R[33],"Unix domain socket utility types",N,N],[3,R[56],R[137],"Stream of listeners",N,N],[3,R[31],E,"Read half of a `UnixStream`.",N,N],[3,R[32],E,"Write half of a `UnixStream`.",N,N],[3,"UCred",E,"Credentials of a process",N,N],[12,"uid",E,"UID (user ID) of the process",28,N],[12,"gid",E,"GID (group ID) of the process",28,N],[11,"bind",R[33],"Creates a new `UnixDatagram` bound to the specified path.",29,[[["p"]],[[R[10],[R[57]]],[R[57]]]]],[11,"pair",E,R[68],29,[[],[R[10]]]],[11,R[34],E,"Consumes a `UnixDatagram` in the standard library and…",29,[[[R[57]]],[[R[10],[R[57]]],[R[57]]]]],[11,"unbound",E,"Creates a new `UnixDatagram` which is not bound to any…",29,[[],[[R[10],[R[57]]],[R[57]]]]],[11,R[58],E,"Connects the socket to the specified address.",29,[[["self"],["asref",["path"]],["path"]],[R[10]]]],[11,"send",E,"Sends data on the socket to the socket's peer.",29,[[["self"]]]],[11,"recv",E,R[60],29,[[["self"]]]],[11,R[59],E,"Sends data on the socket to the specified address.",29,[[["p"],["self"]]]],[11,R[52],E,R[60],29,[[["self"]]]],[11,R[40],E,R[61],29,[[["self"]],[[R[36]],[R[10],[R[36]]]]]],[11,R[62],E,"Returns the address of this socket's peer.",29,[[["self"]],[[R[36]],[R[10],[R[36]]]]]],[11,R[64],E,R[65],29,[[["self"]],[[R[41],["error"]],[R[10],[R[41]]]]]],[11,R[30],E,"Shut down the read, write, or both halves of this…",29,[[["self"],[R[30]]],[R[10]]]],[11,"bind",E,"Creates a new `UnixListener` bound to the specified path.",30,[[["p"]],[[R[10],[R[63]]],[R[63]]]]],[11,R[34],E,"Consumes a `UnixListener` in the standard library and…",30,[[[R[63]]],[[R[10],[R[63]]],[R[63]]]]],[11,R[40],E,"Returns the local socket address of this listener.",30,[[["self"]],[[R[36]],[R[10],[R[36]]]]]],[11,R[64],E,R[65],30,[[["self"]],[[R[41],["error"]],[R[10],[R[41]]]]]],[11,"accept",E,"Accepts a new incoming connection to this listener.",30,[[["self"]]]],[11,R[37],E,R[66],30,[[["self"]],[R[37]]]],[11,R[58],E,"Connects to the socket named by `path`.",31,[[["p"]]]],[11,R[34],E,"Consumes a `UnixStream` in the standard library and…",31,[[[R[67]]],[[R[10],[R[67]]],[R[67]]]]],[11,"pair",E,R[68],31,[[],[R[10]]]],[11,R[40],E,"Returns the socket address of the local half of this…",31,[[["self"]],[[R[36]],[R[10],[R[36]]]]]],[11,R[62],E,"Returns the socket address of the remote half of this…",31,[[["self"]],[[R[36]],[R[10],[R[36]]]]]],[11,"peer_cred",E,"Returns effective credentials of the process which called…",31,[[["self"]],[[R[10],["ucred"]],["ucred"]]]],[11,R[64],E,R[65],31,[[["self"]],[[R[41],["error"]],[R[10],[R[41]]]]]],[11,R[30],E,R[69],31,[[["self"],[R[30]]],[R[10]]]],[11,"split",E,"Split a `UnixStream` into a read half and a write half,…",31,[[["self"]]]],[8,"ToSocketAddrs",E,"Convert or resolve without blocking to one or more…",N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,R[70],R[80],R[71],N,N],[10,R[72],E,R[73],14,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[10,R[153],E,R[74],14,[[["pin"],["self"],["usize"]]]],[8,R[75],E,R[24],N,N],[11,R[76],R[77],R[78],15,[[["self"]],["bool"]]],[10,R[79],R[80],R[81],15,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[82],R[77],R[25],15,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[8,R[83],R[80],R[84],N,N],[10,R[85],E,R[86],17,[[["self"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[10,R[87],E,R[88],17,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[10,R[89],E,R[90],17,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[91],R[77],R[92],17,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[0,"process","tokio","An implementation of asynchronous process management for…",N,N],[3,"Command",R[139],"This structure mimics the API of [`std::process::Command`]…",N,N],[3,"Child",E,"Representation of a child process spawned onto an event…",N,N],[3,R[249],E,"The standard input stream for spawned children.",N,N],[3,R[250],E,"The standard output stream for spawned children.",N,N],[3,R[251],E,"The standard error stream for spawned children.",N,N],[11,"new",E,"Constructs a new `Command` for launching the program at…",32,[[["asref",["osstr"]],["osstr"]],[R[93]]]],[11,"arg",E,"Adds an argument to pass to the program.",32,[[["self"],["asref",["osstr"]],["osstr"]],[R[93]]]],[11,"args",E,"Adds multiple arguments to pass to the program.",32,[[["self"],["i"]],[R[93]]]],[11,"env",E,"Inserts or updates an environment variable mapping.",32,[[["self"],["k"],["v"]],[R[93]]]],[11,"envs",E,"Adds or updates multiple environment variable mappings.",32,[[["self"],["i"]],[R[93]]]],[11,"env_remove",E,"Removes an environment variable mapping.",32,[[["self"],["asref",["osstr"]],["osstr"]],[R[93]]]],[11,"env_clear",E,"Clears the entire environment map for the child process.",32,[[["self"]],[R[93]]]],[11,"current_dir",E,"Sets the working directory for the child process.",32,[[["self"],["asref",["path"]],["path"]],[R[93]]]],[11,"stdin",E,"Configuration for the child process's standard input…",32,[[["self"],["into",["stdio"]],["stdio"]],[R[93]]]],[11,"stdout",E,"Configuration for the child process's standard output…",32,[[["self"],["into",["stdio"]],["stdio"]],[R[93]]]],[11,R[9],E,"Configuration for the child process's standard error…",32,[[["self"],["into",["stdio"]],["stdio"]],[R[93]]]],[11,"kill_on_drop",E,"Controls whether a `kill` operation should be invoked on a…",32,[[["self"],["bool"]],[R[93]]]],[11,"uid",E,"Sets the child process's user ID. This translates to a…",32,[[["self"],["u32"]],[R[93]]]],[11,"gid",E,"Similar to `uid`, but sets the group ID of the child…",32,[[["self"],["u32"]],[R[93]]]],[11,"pre_exec",E,"Schedules a closure to be run just before the `exec`…",32,[[["self"],["f"]],[R[93]]]],[11,"spawn",E,"Executes the command as a child process, returning a…",32,[[["self"]],[[R[10],["child"]],["child"]]]],[11,"status",E,"Executes a command as a child process, waiting for it to…",32,[[["self"]]]],[11,"output",E,"Executes the command as a child process, waiting for it to…",32,[[["self"]]]],[11,"id",E,"Returns the OS-assigned process identifier associated with…",33,[[["self"]],["u32"]]],[11,"kill",E,"Forces the child to exit.",33,[[["self"]],[R[10]]]],[11,"stdin",E,"Returns a handle for writing to the child's stdin, if it…",33,[[["self"]],[R[41]]]],[11,"stdout",E,"Returns a handle for reading from the child's stdout, if…",33,[[["self"]],[R[41]]]],[11,R[9],E,"Returns a handle for reading from the child's stderr, if…",33,[[["self"]],[R[41]]]],[11,"wait_with_output",E,"Returns a future that will resolve to an `Output`,…",33,[[]]],[0,R[95],"tokio",R[94],N,N],[3,R[307],R[141],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Handle",E,"Handle to the runtime",N,N],[3,"Runtime",E,R[94],N,N],[11,"new",E,"Returns a new runtime builder initialized with default…",34,[[],[R[280]]]],[11,"enable_all",E,"Enable both I/O and time drivers.",34,[[["self"]],["self"]]],[11,"num_threads",E,"Set the maximum number of worker threads for the…",34,[[["self"],["usize"]],["self"]]],[11,"thread_name",E,"Set name of threads spawned by the `Runtime`'s thread pool.",34,[[["self"]],["self"]]],[11,"thread_stack_size",E,"Set the stack size (in bytes) for worker threads.",34,[[["self"],["usize"]],["self"]]],[11,"on_thread_start",E,"Execute function `f` after each thread is started but…",34,[[["self"],["f"]],["self"]]],[11,"on_thread_stop",E,"Execute function `f` before each thread stops.",34,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `Runtime`.",34,[[["self"]],[[R[10],[R[95]]],[R[95]]]]],[11,"enable_io",E,"Enable the I/O driver.",34,[[["self"]],["self"]]],[11,"enable_time",E,"Enable the time driver.",34,[[["self"]],["self"]]],[11,"basic_scheduler",E,"Use a simpler scheduler that runs all tasks on the…",34,[[["self"]],["self"]]],[11,"threaded_scheduler",E,"Use a multi-threaded scheduler for executing tasks.",34,[[["self"]],["self"]]],[11,"enter",E,R[98],35,[[["self"],["f"]],["r"]]],[11,"spawn",E,R[97],35,[[["self"],["f"]],[R[96]]]],[11,"new",E,"Create a new runtime instance with default configuration…",36,[[],[R[10]]]],[11,"spawn",E,R[97],36,[[["self"],["f"]],[R[96]]]],[11,R[258],E,"Run a future to completion on the Tokio runtime. This is…",36,[[["self"],["future"]]]],[11,"enter",E,R[98],36,[[["self"],["f"]],["r"]]],[11,"handle",E,"Return a handle to the runtime's spawner.",36,[[["self"]],["handle"]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",N,N],[5,"ctrl_c","tokio::signal","Completes when a \"ctrl-c\" notification is sent to the…",N,[[]]],[0,"unix",E,"Unix-specific types for signal handling.",N,N],[3,R[244],R[142],"Represents the specific kind of signal to listen for.",N,N],[3,"Signal",E,"A stream of events for receiving a particular type of OS…",N,N],[5,"signal",E,"Creates a new stream which will receive notifications when…",N,[[[R[157]]],[[R[10],["signal"]],["signal"]]]],[11,"from_raw",E,"Allows for listening to any valid OS signal.",37,[[["c_int"]],["self"]]],[11,"alarm",E,"Represents the SIGALRM signal.",37,[[],["self"]]],[11,"child",E,"Represents the SIGCHLD signal.",37,[[],["self"]]],[11,"hangup",E,"Represents the SIGHUP signal.",37,[[],["self"]]],[11,"interrupt",E,"Represents the SIGINT signal.",37,[[],["self"]]],[11,"io",E,"Represents the SIGIO signal.",37,[[],["self"]]],[11,"pipe",E,"Represents the SIGPIPE signal.",37,[[],["self"]]],[11,"quit",E,"Represents the SIGQUIT signal.",37,[[],["self"]]],[11,"terminate",E,"Represents the SIGTERM signal.",37,[[],["self"]]],[11,"user_defined1",E,"Represents the SIGUSR1 signal.",37,[[],["self"]]],[11,"user_defined2",E,"Represents the SIGUSR2 signal.",37,[[],["self"]]],[11,"window_change",E,"Represents the SIGWINCH signal.",37,[[],["self"]]],[11,"recv",E,"Receive the next signal notification event.",38,[[["self"]]]],[11,"poll_recv",E,"Poll to receive the next signal notification event,…",38,[[["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[0,"sync","tokio","Future-aware synchronization",N,N],[3,"Barrier",R[105],"A barrier enables multiple threads to synchronize the…",N,N],[3,R[245],E,"A `BarrierWaitResult` is returned by `wait` when all…",N,N],[3,"Mutex",E,"An asynchronous mutual exclusion primitive useful for…",N,N],[3,R[252],E,"A handle to a held `Mutex`.",N,N],[11,"new",E,"Creates a new barrier that can block a given number of…",39,[[["usize"]],["barrier"]]],[11,"wait",E,"Does not resolve until all tasks have rendezvoused here.",39,[[["self"]]]],[11,"is_leader",E,"Returns true if this thread from wait is the \"leader…",40,[[["self"]],["bool"]]],[0,"mpsc",E,"A multi-producer, single-consumer queue for sending values…",N,N],[3,R[112],R[143],"Receive values from the associated `Sender`.",N,N],[3,"Sender",E,"Send values to the associated `Receiver`.",N,N],[3,R[246],E,"Receive values from the associated `UnboundedSender`.",N,N],[3,R[247],E,"Send values to the associated `UnboundedReceiver`.",N,N],[5,"channel",E,"Create a bounded mpsc channel for communicating between…",N,[[["usize"]]]],[5,"unbounded_channel",E,"Create an unbounded mpsc channel for communicating between…",N,[[]]],[11,"recv",E,R[101],41,[[["self"]]]],[11,R[111],E,R[102],41,[[["self"]],[[R[99]],[R[10],[R[99]]]]]],[11,"close",E,R[103],41,[[["self"]]]],[11,"try_send",E,"Attempts to immediately send a message on this `Sender`",42,[[["self"],[T]],[[R[100]],[R[10],[R[100]]]]]],[11,"send",E,"Send a value, waiting until there is capacity.",42,[[[T],["self"]]]],[11,"recv",E,R[101],43,[[["self"]]]],[11,R[111],E,R[102],43,[[["self"]],[[R[99]],[R[10],[R[99]]]]]],[11,"close",E,R[103],43,[[["self"]]]],[11,"send",E,"Attempts to send a message on this `UnboundedSender`…",44,[[["self"],[T]],[[R[10],[R[104]]],[R[104]]]]],[0,"error",E,"Channel error types",N,N],[3,R[113],R[144],"Error returned by the `Sender`.",N,N],[12,"0",E,E,45,N],[3,R[108],E,"Error returned by `Receiver`.",N,N],[3,R[253],E,"Erorr returned by `Sender::poll_ready`].",N,N],[4,R[248],E,"This enumeration is the list of the possible error…",N,N],[13,"Full",E,"The data could not be sent on the channel because the…",46,N],[13,"Closed",E,"The receive half of the channel was explicitly closed or…",46,N],[4,R[109],E,"This enumeration is the list of the possible reasons that…",N,N],[13,"Empty",E,"This channel is currently empty, but the Sender(s) have…",47,N],[13,"Closed",E,"The channel's sending half has been closed, and there will…",47,N],[11,"new",R[105],"Creates a new lock in an unlocked state ready for use.",48,[[[T]],["self"]]],[11,"lock",E,"A future that resolves on acquiring the lock and returns…",48,[[["self"]]]],[11,"try_lock",E,"Try to aquire the lock",48,[[["self"]],[[R[10],[R[107],R[106]]],[R[106]],[R[107]]]]],[0,"oneshot",E,"A channel for sending a single message between…",N,N],[3,"Sender",R[110],"Sends a value to the associated `Receiver`.",N,N],[3,R[112],E,"Receive a value from the associated `Sender`.",N,N],[5,"channel",E,"Create a new one-shot channel for sending single values…",N,[[]]],[0,"error",E,"Oneshot error types",N,N],[3,R[108],R[145],"Error returned by the `Future` implementation for…",N,N],[4,R[109],E,"Error returned by the `try_recv` function on `Receiver`.",N,N],[13,"Empty",E,"The send half of the channel has not yet sent a value.",49,N],[13,"Closed",E,"The send half of the channel was dropped without sending a…",49,N],[11,"send",R[110],"Attempts to send a value on this channel, returning it…",50,[[[T]],[R[10]]]],[11,"closed",E,"Wait for the associated [`Receiver`] handle to close.",50,[[["self"]]]],[11,"is_closed",E,"Returns `true` if the associated [`Receiver`] handle has…",50,[[["self"]],["bool"]]],[11,"close",E,"Prevent the associated [`Sender`] handle from sending a…",51,[[["self"]]]],[11,R[111],E,"Attempts to receive a value.",51,[[["self"]],[[R[99]],[R[10],[R[99]]]]]],[0,"watch",R[105],"A single-producer, multi-consumer channel that only…",N,N],[3,R[112],R[114],"Receives values from the associated `Sender`.",N,N],[3,"Sender",E,"Sends values to the associated `Receiver`.",N,N],[3,"Ref",E,"Returns a reference to the inner value",N,N],[5,"channel",E,"Create a new watch channel, returning the \"send\" and…",N,[[["clone"]]]],[0,"error",E,"Watch error types",N,N],[3,R[113],R[146],"Error produced when sending a value fails.",N,N],[11,"borrow",R[114],"Returns a reference to the most recently sent value",52,[[["self"]],["ref"]]],[11,"recv",E,"Attempts to clone the latest value sent via the channel.",52,[[["self"]]]],[11,R[115],E,"Broadcast a new value via the channel, notifying all…",53,[[["self"],[T]],[[R[10],[R[104]]],[R[104]]]]],[11,"closed",E,"Completes when all receivers have dropped.",53,[[["self"]]]],[0,"task","tokio","Asynchronous green-threads.",N,N],[3,R[254],R[147],"Task failed to execute to completion.",N,N],[3,R[255],E,"An owned permission to join on a task (await its…",N,N],[3,"LocalSet",E,"A set of tasks which are executed on the same thread.",N,N],[5,"spawn_blocking",E,"Run the provided closure on a thread where blocking is…",N,[[["f"]],[R[96]]]],[5,"block_in_place",E,"Run the provided blocking function without blocking the…",N,[[["f"]],["r"]]],[5,"spawn",E,R[116],N,[[[T]],[R[96]]]],[5,"yield_now",E,"Yield execution back to the Tokio runtime.",N,[[]]],[5,R[117],E,"Spawns a `!Send` future on the local task set.",N,[[["f"]],[R[96]]]],[11,"new",E,"Returns a new local task set.",54,[[],["self"]]],[11,R[117],E,"Spawns a `!Send` task onto the local task set.",54,[[["self"],["f"]],[R[96]]]],[11,R[258],E,"Run a future to completion on the provided runtime,…",54,[[["self"],[R[95]],["f"]]]],[0,"time","tokio","Utilities for tracking time.",N,N],[3,"Duration",R[125],"A `Duration` type to represent a span of time, typically…",N,N],[3,R[122],E,R[121],N,N],[3,"Delay",E,"Future returned by `delay_until` and `delay_for`.",N,N],[3,"Error",E,"Errors encountered by the timer implementation.",N,N],[3,"Instant",E,"A measurement of the system clock, useful for talking to…",N,N],[3,"Interval",E,"Stream returned by `interval` and `interval_at`.",N,N],[3,"Timeout",E,"Future returned by `timeout` and `timeout_at`.",N,N],[3,"Elapsed",E,"Error returned by `Timeout`.",N,N],[3,"Throttle",E,"Stream for the `throttle` function.",N,N],[5,"advance",E,"Advance time",N,[[[R[42]]]]],[5,"pause",E,"Pause time",N,[[]]],[5,"resume",E,"Resume time",N,[[]]],[5,"delay_for",E,"Wait until `duration` has elapsed.",N,[[[R[42]]],["delay"]]],[5,"delay_until",E,"Wait until `deadline` is reached.",N,[[[R[126]]],["delay"]]],[5,R[119],E,R[118],N,[[[R[42]]],[R[119]]]],[5,"interval_at",E,R[118],N,[[[R[126]],[R[42]]],[R[119]]]],[5,"timeout",E,R[120],N,[[[T],[R[42]]],["timeout"]]],[5,"timeout_at",E,R[120],N,[[[R[126]],[T]],["timeout"]]],[5,"throttle",E,"Slow down a stream by enforcing a delay between items.…",N,[[[T],[R[42]]],["throttle"]]],[0,"delay_queue",E,R[121],N,N],[3,R[122],R[148],R[121],N,N],[3,"Expired",E,"An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key",E,"Token to a value stored in a `DelayQueue`.",N,N],[11,"new",E,"Create a new, empty, `DelayQueue`",55,[[],[R[123]]]],[11,R[19],E,"Create a new, empty, `DelayQueue` with the specified…",55,[[["usize"]],[R[123]]]],[11,"insert_at",E,"Insert `value` into the queue set to expire at a specific…",55,[[["self"],[R[126]],[T]],["key"]]],[11,"poll_expired",E,"Attempt to pull out the next value of the delay queue,…",55,[[["self"],[R[11]]],[["poll",[R[41]]],[R[41],[R[10]]]]]],[11,"insert",E,"Insert `value` into the queue set to expire after the…",55,[[["self"],[T],[R[42]]],["key"]]],[11,"remove",E,"Remove the item associated with `key` from the queue.",55,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[124],55,[[["self"],[R[126]],["key"]]]],[11,"reset",E,R[124],55,[[["self"],["key"],[R[42]]]]],[11,"clear",E,"Clears the queue, removing all items.",55,[[["self"]]]],[11,"capacity",E,"Returns the number of elements the queue can hold without…",55,[[["self"]],["usize"]]],[11,"reserve",E,"Reserve capacity for at least `additional` more items to…",55,[[["self"],["usize"]]]],[11,"is_empty",E,"Returns `true` if there are no items in the queue.",55,[[["self"]],["bool"]]],[11,R[16],E,"Returns a reference to the inner value.",56,[[["self"]],[T]]],[11,R[17],E,"Returns a mutable reference to the inner value.",56,[[["self"]],[T]]],[11,R[15],E,"Consumes `self` and returns the inner value.",56,[[],[T]]],[11,"deadline",R[125],"Returns the instant at which the future will complete.",57,[[["self"]],[R[126]]]],[11,"is_elapsed",E,"Returns true if the `Delay` has elapsed",57,[[["self"]],["bool"]]],[11,"reset",E,"Reset the `Delay` instance to a new deadline.",57,[[["self"],[R[126]]]]],[11,R[30],E,"Create an error representing a shutdown timer.",58,[[],["error"]]],[11,"is_shutdown",E,R[127],58,[[["self"]],["bool"]]],[11,"at_capacity",E,"Create an error representing a timer at capacity.",58,[[],["error"]]],[11,"is_at_capacity",E,R[127],58,[[["self"]],["bool"]]],[11,"now",E,"Returns an instant corresponding to \"now\".",59,[[],[R[126]]]],[11,R[34],E,"Create a `tokio::time::Instant` from a `std::time::Instant`.",59,[[[R[126]]],[R[126]]]],[11,"into_std",E,"Convert the value into a `std::time::Instant`.",59,[[],[R[126]]]],[11,"duration_since",E,R[128],59,[[["self"],[R[126]]],[R[42]]]],[11,"checked_duration_since",E,R[128],59,[[["self"],[R[126]]],[[R[41],[R[42]]],[R[42]]]]],[11,"saturating_duration_since",E,R[128],59,[[["self"],[R[126]]],[R[42]]]],[11,"elapsed",E,"Returns the amount of time elapsed since this instant was…",59,[[["self"]],[R[42]]]],[11,R[222],E,"Returns `Some(t)` where `t` is the time `self + duration`…",59,[[["self"],[R[42]]],[[R[41],[R[126]]],[R[126]]]]],[11,R[223],E,"Returns `Some(t)` where `t` is the time `self - duration`…",59,[[["self"],[R[42]]],[[R[41],[R[126]]],[R[126]]]]],[11,"tick",E,"Completes when the next instant in the interval has been…",60,[[["self"]]]],[11,R[16],E,"Gets a reference to the underlying value in this timeout.",61,[[["self"]],[T]]],[11,R[17],E,"Gets a mutable reference to the underlying value in this…",61,[[["self"]],[T]]],[11,R[15],E,"Consumes this timeout, returning the underlying value.",61,[[],[T]]],[11,R[16],E,"Acquires a reference to the underlying stream that this…",62,[[["self"]],[T]]],[11,R[17],E,"Acquires a mutable reference to the underlying stream that…",62,[[["self"]],[T]]],[11,R[15],E,"Consumes this combinator, returning the underlying stream.",62,[[],[T]]],[11,"into",R[7],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[130],E,E,0,[[[U]],[R[10]]]],[11,R[131],E,E,0,[[],[R[10]]]],[11,R[129],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[133],E,E,0,[[["self"]],["typeid"]]],[11,R[138],E,E,1,[[["self"]],[T]]],[11,R[132],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[130],E,E,1,[[[U]],[R[10]]]],[11,R[131],E,E,1,[[],[R[10]]]],[11,R[129],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[133],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[130],E,E,3,[[[U]],[R[10]]]],[11,R[131],E,E,3,[[],[R[10]]]],[11,R[129],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[133],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[130],E,E,2,[[[U]],[R[10]]]],[11,R[131],E,E,2,[[],[R[10]]]],[11,R[129],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[133],E,E,2,[[["self"]],["typeid"]]],[11,R[134],E,E,2,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,"into",R[77],E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[136],E,E,63,[[["self"]],["string"]]],[11,R[130],E,E,63,[[[U]],[R[10]]]],[11,R[131],E,E,63,[[],[R[10]]]],[11,R[129],E,E,63,[[["self"]],[T]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[133],E,E,63,[[["self"]],["typeid"]]],[11,R[138],E,E,4,[[["self"]],[T]]],[11,R[132],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[130],E,E,4,[[[U]],[R[10]]]],[11,R[131],E,E,4,[[],[R[10]]]],[11,R[129],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[133],E,E,4,[[["self"]],["typeid"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[130],E,E,5,[[[U]],[R[10]]]],[11,R[131],E,E,5,[[],[R[10]]]],[11,R[129],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[133],E,E,5,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[130],E,E,6,[[[U]],[R[10]]]],[11,R[131],E,E,6,[[],[R[10]]]],[11,R[129],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[133],E,E,6,[[["self"]],["typeid"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[130],E,E,64,[[[U]],[R[10]]]],[11,R[131],E,E,64,[[],[R[10]]]],[11,R[129],E,E,64,[[["self"]],[T]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[133],E,E,64,[[["self"]],["typeid"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[130],E,E,65,[[[U]],[R[10]]]],[11,R[131],E,E,65,[[],[R[10]]]],[11,R[129],E,E,65,[[["self"]],[T]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[133],E,E,65,[[["self"]],["typeid"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[130],E,E,66,[[[U]],[R[10]]]],[11,R[131],E,E,66,[[],[R[10]]]],[11,R[129],E,E,66,[[["self"]],[T]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[133],E,E,66,[[["self"]],["typeid"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[130],E,E,7,[[[U]],[R[10]]]],[11,R[131],E,E,7,[[],[R[10]]]],[11,R[129],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[133],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[130],E,E,67,[[[U]],[R[10]]]],[11,R[131],E,E,67,[[],[R[10]]]],[11,R[129],E,E,67,[[["self"]],[T]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[133],E,E,67,[[["self"]],["typeid"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[130],E,E,68,[[[U]],[R[10]]]],[11,R[131],E,E,68,[[],[R[10]]]],[11,R[129],E,E,68,[[["self"]],[T]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[133],E,E,68,[[["self"]],["typeid"]]],[11,R[140],E,E,68,[[["f"],[R[11]],["pin"]],["poll"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[130],E,E,8,[[[U]],[R[10]]]],[11,R[131],E,E,8,[[],[R[10]]]],[11,R[129],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[133],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[130],E,E,9,[[[U]],[R[10]]]],[11,R[131],E,E,9,[[],[R[10]]]],[11,R[129],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[133],E,E,9,[[["self"]],["typeid"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[130],E,E,10,[[[U]],[R[10]]]],[11,R[131],E,E,10,[[],[R[10]]]],[11,R[129],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[133],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[130],E,E,69,[[[U]],[R[10]]]],[11,R[131],E,E,69,[[],[R[10]]]],[11,R[129],E,E,69,[[["self"]],[T]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[133],E,E,69,[[["self"]],["typeid"]]],[11,R[140],E,E,69,[[["f"],[R[11]],["pin"]],["poll"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[130],E,E,70,[[[U]],[R[10]]]],[11,R[131],E,E,70,[[],[R[10]]]],[11,R[129],E,E,70,[[["self"]],[T]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[133],E,E,70,[[["self"]],["typeid"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[130],E,E,11,[[[U]],[R[10]]]],[11,R[131],E,E,11,[[],[R[10]]]],[11,R[129],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[133],E,E,11,[[["self"]],["typeid"]]],[11,R[134],E,E,11,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[130],E,E,71,[[[U]],[R[10]]]],[11,R[131],E,E,71,[[],[R[10]]]],[11,R[129],E,E,71,[[["self"]],[T]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[133],E,E,71,[[["self"]],["typeid"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[130],E,E,72,[[[U]],[R[10]]]],[11,R[131],E,E,72,[[],[R[10]]]],[11,R[129],E,E,72,[[["self"]],[T]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[133],E,E,72,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[130],E,E,12,[[[U]],[R[10]]]],[11,R[131],E,E,12,[[],[R[10]]]],[11,R[129],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[133],E,E,12,[[["self"]],["typeid"]]],[11,R[134],E,E,12,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[130],E,E,13,[[[U]],[R[10]]]],[11,R[131],E,E,13,[[],[R[10]]]],[11,R[129],E,E,13,[[["self"]],[T]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[133],E,E,13,[[["self"]],["typeid"]]],[11,"into",R[33],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[130],E,E,22,[[[U]],[R[10]]]],[11,R[131],E,E,22,[[],[R[10]]]],[11,R[129],E,E,22,[[["self"]],[T]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[133],E,E,22,[[["self"]],["typeid"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[130],E,E,23,[[[U]],[R[10]]]],[11,R[131],E,E,23,[[],[R[10]]]],[11,R[129],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[133],E,E,23,[[["self"]],["typeid"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[130],E,E,25,[[[U]],[R[10]]]],[11,R[131],E,E,25,[[],[R[10]]]],[11,R[129],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[133],E,E,25,[[["self"]],["typeid"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[130],E,E,29,[[[U]],[R[10]]]],[11,R[131],E,E,29,[[],[R[10]]]],[11,R[129],E,E,29,[[["self"]],[T]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[133],E,E,29,[[["self"]],["typeid"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[130],E,E,30,[[[U]],[R[10]]]],[11,R[131],E,E,30,[[],[R[10]]]],[11,R[129],E,E,30,[[["self"]],[T]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[133],E,E,30,[[["self"]],["typeid"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[130],E,E,31,[[[U]],[R[10]]]],[11,R[131],E,E,31,[[],[R[10]]]],[11,R[129],E,E,31,[[["self"]],[T]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[133],E,E,31,[[["self"]],["typeid"]]],[11,"into",R[135],E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[130],E,E,73,[[[U]],[R[10]]]],[11,R[131],E,E,73,[[],[R[10]]]],[11,R[129],E,E,73,[[["self"]],[T]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[133],E,E,73,[[["self"]],["typeid"]]],[11,R[134],E,E,73,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[130],E,E,74,[[[U]],[R[10]]]],[11,R[131],E,E,74,[[],[R[10]]]],[11,R[129],E,E,74,[[["self"]],[T]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[133],E,E,74,[[["self"]],["typeid"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[130],E,E,75,[[[U]],[R[10]]]],[11,R[131],E,E,75,[[],[R[10]]]],[11,R[129],E,E,75,[[["self"]],[T]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[133],E,E,75,[[["self"]],["typeid"]]],[11,"into",R[50],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[130],E,E,26,[[[U]],[R[10]]]],[11,R[131],E,E,26,[[],[R[10]]]],[11,R[129],E,E,26,[[["self"]],[T]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[133],E,E,26,[[["self"]],["typeid"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[130],E,E,27,[[[U]],[R[10]]]],[11,R[131],E,E,27,[[],[R[10]]]],[11,R[129],E,E,27,[[["self"]],[T]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[133],E,E,27,[[["self"]],["typeid"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[136],E,E,24,[[["self"]],["string"]]],[11,R[130],E,E,24,[[[U]],[R[10]]]],[11,R[131],E,E,24,[[],[R[10]]]],[11,R[129],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[133],E,E,24,[[["self"]],["typeid"]]],[11,"into",R[137],E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[130],E,E,76,[[[U]],[R[10]]]],[11,R[131],E,E,76,[[],[R[10]]]],[11,R[129],E,E,76,[[["self"]],[T]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[133],E,E,76,[[["self"]],["typeid"]]],[11,R[134],E,E,76,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[130],E,E,77,[[[U]],[R[10]]]],[11,R[131],E,E,77,[[],[R[10]]]],[11,R[129],E,E,77,[[["self"]],[T]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[133],E,E,77,[[["self"]],["typeid"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[130],E,E,78,[[[U]],[R[10]]]],[11,R[131],E,E,78,[[],[R[10]]]],[11,R[129],E,E,78,[[["self"]],[T]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[133],E,E,78,[[["self"]],["typeid"]]],[11,R[138],E,E,28,[[["self"]],[T]]],[11,R[132],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[130],E,E,28,[[[U]],[R[10]]]],[11,R[131],E,E,28,[[],[R[10]]]],[11,R[129],E,E,28,[[["self"]],[T]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[133],E,E,28,[[["self"]],["typeid"]]],[11,"into",R[139],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[130],E,E,32,[[[U]],[R[10]]]],[11,R[131],E,E,32,[[],[R[10]]]],[11,R[129],E,E,32,[[["self"]],[T]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[133],E,E,32,[[["self"]],["typeid"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[130],E,E,33,[[[U]],[R[10]]]],[11,R[131],E,E,33,[[],[R[10]]]],[11,R[129],E,E,33,[[["self"]],[T]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[133],E,E,33,[[["self"]],["typeid"]]],[11,R[140],E,E,33,[[["f"],[R[11]],["pin"]],["poll"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[130],E,E,79,[[[U]],[R[10]]]],[11,R[131],E,E,79,[[],[R[10]]]],[11,R[129],E,E,79,[[["self"]],[T]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[133],E,E,79,[[["self"]],["typeid"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[130],E,E,80,[[[U]],[R[10]]]],[11,R[131],E,E,80,[[],[R[10]]]],[11,R[129],E,E,80,[[["self"]],[T]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[133],E,E,80,[[["self"]],["typeid"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[130],E,E,81,[[[U]],[R[10]]]],[11,R[131],E,E,81,[[],[R[10]]]],[11,R[129],E,E,81,[[["self"]],[T]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[133],E,E,81,[[["self"]],["typeid"]]],[11,"into",R[141],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[130],E,E,34,[[[U]],[R[10]]]],[11,R[131],E,E,34,[[],[R[10]]]],[11,R[129],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[133],E,E,34,[[["self"]],["typeid"]]],[11,R[138],E,E,35,[[["self"]],[T]]],[11,R[132],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[130],E,E,35,[[[U]],[R[10]]]],[11,R[131],E,E,35,[[],[R[10]]]],[11,R[129],E,E,35,[[["self"]],[T]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[133],E,E,35,[[["self"]],["typeid"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[130],E,E,36,[[[U]],[R[10]]]],[11,R[131],E,E,36,[[],[R[10]]]],[11,R[129],E,E,36,[[["self"]],[T]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[133],E,E,36,[[["self"]],["typeid"]]],[11,R[138],R[142],E,37,[[["self"]],[T]]],[11,R[132],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[130],E,E,37,[[[U]],[R[10]]]],[11,R[131],E,E,37,[[],[R[10]]]],[11,R[129],E,E,37,[[["self"]],[T]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[133],E,E,37,[[["self"]],["typeid"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[130],E,E,38,[[[U]],[R[10]]]],[11,R[131],E,E,38,[[],[R[10]]]],[11,R[129],E,E,38,[[["self"]],[T]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[133],E,E,38,[[["self"]],["typeid"]]],[11,"into",R[105],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[130],E,E,39,[[[U]],[R[10]]]],[11,R[131],E,E,39,[[],[R[10]]]],[11,R[129],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[133],E,E,39,[[["self"]],["typeid"]]],[11,R[138],E,E,40,[[["self"]],[T]]],[11,R[132],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[130],E,E,40,[[[U]],[R[10]]]],[11,R[131],E,E,40,[[],[R[10]]]],[11,R[129],E,E,40,[[["self"]],[T]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[133],E,E,40,[[["self"]],["typeid"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[130],E,E,48,[[[U]],[R[10]]]],[11,R[131],E,E,48,[[],[R[10]]]],[11,R[129],E,E,48,[[["self"]],[T]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[133],E,E,48,[[["self"]],["typeid"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[136],E,E,82,[[["self"]],["string"]]],[11,R[130],E,E,82,[[[U]],[R[10]]]],[11,R[131],E,E,82,[[],[R[10]]]],[11,R[129],E,E,82,[[["self"]],[T]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[133],E,E,82,[[["self"]],["typeid"]]],[11,"into",R[143],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[130],E,E,41,[[[U]],[R[10]]]],[11,R[131],E,E,41,[[],[R[10]]]],[11,R[129],E,E,41,[[["self"]],[T]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[133],E,E,41,[[["self"]],["typeid"]]],[11,R[134],E,E,41,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,R[138],E,E,42,[[["self"]],[T]]],[11,R[132],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[130],E,E,42,[[[U]],[R[10]]]],[11,R[131],E,E,42,[[],[R[10]]]],[11,R[129],E,E,42,[[["self"]],[T]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[133],E,E,42,[[["self"]],["typeid"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[130],E,E,43,[[[U]],[R[10]]]],[11,R[131],E,E,43,[[],[R[10]]]],[11,R[129],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[133],E,E,43,[[["self"]],["typeid"]]],[11,R[134],E,E,43,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,R[138],E,E,44,[[["self"]],[T]]],[11,R[132],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[130],E,E,44,[[[U]],[R[10]]]],[11,R[131],E,E,44,[[],[R[10]]]],[11,R[129],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[133],E,E,44,[[["self"]],["typeid"]]],[11,"into",R[144],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[136],E,E,45,[[["self"]],["string"]]],[11,R[130],E,E,45,[[[U]],[R[10]]]],[11,R[131],E,E,45,[[],[R[10]]]],[11,R[129],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[133],E,E,45,[[["self"]],["typeid"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[136],E,E,83,[[["self"]],["string"]]],[11,R[130],E,E,83,[[[U]],[R[10]]]],[11,R[131],E,E,83,[[],[R[10]]]],[11,R[129],E,E,83,[[["self"]],[T]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[133],E,E,83,[[["self"]],["typeid"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[136],E,E,84,[[["self"]],["string"]]],[11,R[130],E,E,84,[[[U]],[R[10]]]],[11,R[131],E,E,84,[[],[R[10]]]],[11,R[129],E,E,84,[[["self"]],[T]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[133],E,E,84,[[["self"]],["typeid"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[136],E,E,46,[[["self"]],["string"]]],[11,R[130],E,E,46,[[[U]],[R[10]]]],[11,R[131],E,E,46,[[],[R[10]]]],[11,R[129],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[133],E,E,46,[[["self"]],["typeid"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[136],E,E,47,[[["self"]],["string"]]],[11,R[130],E,E,47,[[[U]],[R[10]]]],[11,R[131],E,E,47,[[],[R[10]]]],[11,R[129],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[133],E,E,47,[[["self"]],["typeid"]]],[11,"into",R[110],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[130],E,E,50,[[[U]],[R[10]]]],[11,R[131],E,E,50,[[],[R[10]]]],[11,R[129],E,E,50,[[["self"]],[T]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[133],E,E,50,[[["self"]],["typeid"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[130],E,E,51,[[[U]],[R[10]]]],[11,R[131],E,E,51,[[],[R[10]]]],[11,R[129],E,E,51,[[["self"]],[T]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[133],E,E,51,[[["self"]],["typeid"]]],[11,R[140],E,E,51,[[["f"],[R[11]],["pin"]],["poll"]]],[11,"into",R[145],E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[136],E,E,85,[[["self"]],["string"]]],[11,R[130],E,E,85,[[[U]],[R[10]]]],[11,R[131],E,E,85,[[],[R[10]]]],[11,R[129],E,E,85,[[["self"]],[T]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[133],E,E,85,[[["self"]],["typeid"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[136],E,E,49,[[["self"]],["string"]]],[11,R[130],E,E,49,[[[U]],[R[10]]]],[11,R[131],E,E,49,[[],[R[10]]]],[11,R[129],E,E,49,[[["self"]],[T]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[133],E,E,49,[[["self"]],["typeid"]]],[11,R[138],R[114],E,52,[[["self"]],[T]]],[11,R[132],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[130],E,E,52,[[[U]],[R[10]]]],[11,R[131],E,E,52,[[],[R[10]]]],[11,R[129],E,E,52,[[["self"]],[T]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[133],E,E,52,[[["self"]],["typeid"]]],[11,R[134],E,E,52,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[130],E,E,53,[[[U]],[R[10]]]],[11,R[131],E,E,53,[[],[R[10]]]],[11,R[129],E,E,53,[[["self"]],[T]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[133],E,E,53,[[["self"]],["typeid"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[130],E,E,86,[[[U]],[R[10]]]],[11,R[131],E,E,86,[[],[R[10]]]],[11,R[129],E,E,86,[[["self"]],[T]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[133],E,E,86,[[["self"]],["typeid"]]],[11,"into",R[146],E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[136],E,E,87,[[["self"]],["string"]]],[11,R[130],E,E,87,[[[U]],[R[10]]]],[11,R[131],E,E,87,[[],[R[10]]]],[11,R[129],E,E,87,[[["self"]],[T]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[133],E,E,87,[[["self"]],["typeid"]]],[11,"into",R[147],E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[136],E,E,88,[[["self"]],["string"]]],[11,R[130],E,E,88,[[[U]],[R[10]]]],[11,R[131],E,E,88,[[],[R[10]]]],[11,R[129],E,E,88,[[["self"]],[T]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[133],E,E,88,[[["self"]],["typeid"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[130],E,E,89,[[[U]],[R[10]]]],[11,R[131],E,E,89,[[],[R[10]]]],[11,R[129],E,E,89,[[["self"]],[T]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[133],E,E,89,[[["self"]],["typeid"]]],[11,R[140],E,E,89,[[["f"],[R[11]],["pin"]],["poll"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[130],E,E,54,[[[U]],[R[10]]]],[11,R[131],E,E,54,[[],[R[10]]]],[11,R[129],E,E,54,[[["self"]],[T]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[133],E,E,54,[[["self"]],["typeid"]]],[11,R[138],R[125],E,90,[[["self"]],[T]]],[11,R[132],E,E,90,[[["self"],[T]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[130],E,E,90,[[[U]],[R[10]]]],[11,R[131],E,E,90,[[],[R[10]]]],[11,R[129],E,E,90,[[["self"]],[T]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[133],E,E,90,[[["self"]],["typeid"]]],[11,"into",R[148],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[130],E,E,55,[[[U]],[R[10]]]],[11,R[131],E,E,55,[[],[R[10]]]],[11,R[129],E,E,55,[[["self"]],[T]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[133],E,E,55,[[["self"]],["typeid"]]],[11,"into",R[125],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[130],E,E,57,[[[U]],[R[10]]]],[11,R[131],E,E,57,[[],[R[10]]]],[11,R[129],E,E,57,[[["self"]],[T]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[133],E,E,57,[[["self"]],["typeid"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[136],E,E,58,[[["self"]],["string"]]],[11,R[130],E,E,58,[[[U]],[R[10]]]],[11,R[131],E,E,58,[[],[R[10]]]],[11,R[129],E,E,58,[[["self"]],[T]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[133],E,E,58,[[["self"]],["typeid"]]],[11,R[138],E,E,59,[[["self"]],[T]]],[11,R[132],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[130],E,E,59,[[[U]],[R[10]]]],[11,R[131],E,E,59,[[],[R[10]]]],[11,R[129],E,E,59,[[["self"]],[T]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[133],E,E,59,[[["self"]],["typeid"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[130],E,E,60,[[[U]],[R[10]]]],[11,R[131],E,E,60,[[],[R[10]]]],[11,R[129],E,E,60,[[["self"]],[T]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[133],E,E,60,[[["self"]],["typeid"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[130],E,E,61,[[[U]],[R[10]]]],[11,R[131],E,E,61,[[],[R[10]]]],[11,R[129],E,E,61,[[["self"]],[T]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[133],E,E,61,[[["self"]],["typeid"]]],[11,R[140],E,E,61,[[["f"],[R[11]],["pin"]],["poll"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[136],E,E,91,[[["self"]],["string"]]],[11,R[130],E,E,91,[[[U]],[R[10]]]],[11,R[131],E,E,91,[[],[R[10]]]],[11,R[129],E,E,91,[[["self"]],[T]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[133],E,E,91,[[["self"]],["typeid"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[130],E,E,62,[[[U]],[R[10]]]],[11,R[131],E,E,62,[[],[R[10]]]],[11,R[129],E,E,62,[[["self"]],[T]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[133],E,E,62,[[["self"]],["typeid"]]],[11,R[134],E,E,62,[[["pin"],["s"],[R[11]]],[[R[41],[R[10]]],["poll",[R[41]]]]]],[11,"into",R[148],E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[130],E,E,56,[[[U]],[R[10]]]],[11,R[131],E,E,56,[[],[R[10]]]],[11,R[129],E,E,56,[[["self"]],[T]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[133],E,E,56,[[["self"]],["typeid"]]],[11,R[138],E,E,92,[[["self"]],[T]]],[11,R[132],E,E,92,[[["self"],[T]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[130],E,E,92,[[[U]],[R[10]]]],[11,R[131],E,E,92,[[],[R[10]]]],[11,R[129],E,E,92,[[["self"]],[T]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[133],E,E,92,[[["self"]],["typeid"]]],[11,"from",R[77],"Converts an [`ErrorKind`] into an [`Error`].",63,[[[R[149]]],["error"]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",63,[[["nulerror"]],["error"]]],[11,"from",E,E,63,[[["intoinnererror"]],["error"]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"eq",E,E,4,[[["self"],[R[149]]],["bool"]]],[11,"description",E,E,63,[[["self"]],["str"]]],[11,"cause",E,E,63,[[["self"]],[[R[41],["error"]],["error"]]]],[11,"source",E,E,63,[[["self"]],[["error"],[R[41],["error"]]]]],[11,"fmt",E,E,63,[[["self"],[R[150]]],[[R[10],["error"]],["error"]]]],[11,"cmp",E,E,4,[[["self"],[R[149]]],[R[151]]]],[11,"fmt",E,E,63,[[["self"],[R[150]]],[[R[10],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[150]]],[[R[10],["error"]],["error"]]]],[11,"clone",E,E,4,[[["self"]],[R[149]]]],[11,R[152],E,E,4,[[["self"],[R[149]]],[[R[151]],[R[41],[R[151]]]]]],[11,"fmt",R[125],E,90,[[["self"],[R[150]]],[[R[10],["error"]],["error"]]]],[11,"div_assign",E,E,90,[[["self"],["u32"]]]],[11,R[160],E,E,90,[[["self"],[R[42]]]]],[11,"div",E,E,90,[[["u32"]],[R[42]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"mul",E,E,90,[[["u32"]],[R[42]]]],[11,"sum",E,E,90,[[["i"]],[R[42]]]],[11,"sum",E,E,90,[[["i"]],[R[42]]]],[11,"mul_assign",E,E,90,[[["self"],["u32"]]]],[11,"sub",E,E,90,[[[R[42]]],[R[42]]]],[11,"eq",E,E,90,[[["self"],[R[42]]],["bool"]]],[11,"ne",E,E,90,[[["self"],[R[42]]],["bool"]]],[11,"clone",E,E,90,[[["self"]],[R[42]]]],[11,R[152],E,E,90,[[["self"],[R[42]]],[[R[151]],[R[41],[R[151]]]]]],[11,"lt",E,E,90,[[["self"],[R[42]]],["bool"]]],[11,"le",E,E,90,[[["self"],[R[42]]],["bool"]]],[11,"gt",E,E,90,[[["self"],[R[42]]],["bool"]]],[11,"ge",E,E,90,[[["self"],[R[42]]],["bool"]]],[11,R[156],E,E,90,[[],[R[42]]]],[11,"add",E,E,90,[[[R[42]]],[R[42]]]],[11,R[161],E,E,90,[[["self"],[R[42]]]]],[11,"cmp",E,E,90,[[["self"],[R[42]]],[R[151]]]],[11,R[72],R[77],E,8,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[153],E,E,8,[[["pin"],["self"],["usize"]]]],[11,R[72],E,E,9,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[153],E,E,9,[[["pin"],["self"],["usize"]]]],[11,R[72],E,E,10,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[153],E,E,10,[[["pin"],["self"],["usize"]]]],[11,R[72],E,E,70,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[153],E,E,70,[[["pin"],["self"],["usize"]]]],[11,R[72],E,E,13,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[153],E,E,13,[[["pin"],["self"],["usize"]]]],[11,R[79],R[7],E,0,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[79],R[77],E,5,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[79],E,E,65,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[79],E,E,7,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[82],E,E,7,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[79],E,E,8,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[76],E,E,8,[[["self"]],["bool"]]],[11,R[79],E,E,9,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[76],E,E,9,[[["self"]],["bool"]]],[11,R[79],E,E,10,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[76],E,E,10,[[["self"]],["bool"]]],[11,R[79],E,E,70,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[79],E,E,71,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[76],E,E,13,[[["self"]],["bool"]]],[11,R[79],E,E,13,[[["self"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[11,R[76],R[135],E,74,[[["self"]],["bool"]]],[11,R[79],E,E,74,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[76],R[33],E,23,[[["self"]],["bool"]]],[11,R[79],E,E,23,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[76],R[137],E,77,[[["self"]],["bool"]]],[11,R[79],E,E,77,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[76],R[33],E,31,[[["self"]],["bool"]]],[11,R[79],E,E,31,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[79],R[139],E,80,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[79],E,E,81,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[154],R[7],E,0,[[["self"],[R[28]],["pin"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[155],E,E,0,[[["pin"],["self"],[R[11]]],[[R[10],["u64"]],["poll",[R[10]]]]]],[11,R[85],E,E,0,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,0,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[89],E,E,0,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[85],R[77],E,5,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,5,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,5,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],E,E,64,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,64,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[89],E,E,64,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[85],E,E,66,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,66,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[89],E,E,66,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[85],E,E,67,[[["self"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[11,R[87],E,E,67,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[89],E,E,67,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[91],E,E,67,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[11,R[85],E,E,8,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,8,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,8,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],E,E,9,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,9,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,9,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],E,E,10,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,10,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,10,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],E,E,72,[[["self"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[11,R[87],E,E,72,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[89],E,E,72,[[["pin"],["self"],[R[11]]],[[R[10],["error"]],["poll",[R[10]]]]]],[11,R[85],R[135],E,75,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[91],E,E,75,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,75,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,75,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],R[33],E,23,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[91],E,E,23,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,23,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,23,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],R[137],E,78,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,78,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,78,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],R[33],E,31,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,31,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,31,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[85],R[139],E,79,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,79,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,79,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,"drop",R[77],E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"drop",R[105],E,82,[[["self"]]]],[11,"drop",R[110],E,50,[[["self"]]]],[11,"drop",E,E,51,[[["self"]]]],[11,"drop",R[114],E,52,[[["self"]]]],[11,"drop",E,E,53,[[["self"]]]],[11,"drop",R[147],E,89,[[["self"]]]],[11,R[156],R[7],E,1,[[],["self"]]],[11,R[156],R[141],E,34,[[],["self"]]],[11,R[156],R[105],E,48,[[],["self"]]],[11,R[156],R[147],E,54,[[],["self"]]],[11,R[156],R[148],E,55,[[],[R[123]]]],[11,"clone",R[7],E,1,[[["self"]],[R[5]]]],[11,"clone",R[137],E,28,[[["self"]],["ucred"]]],[11,"clone",R[141],E,35,[[["self"]],["handle"]]],[11,"clone",R[142],E,37,[[["self"]],[R[157]]]],[11,"clone",R[105],E,40,[[["self"]],["barrierwaitresult"]]],[11,"clone",R[143],E,42,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",R[114],E,52,[[["self"]],["self"]]],[11,"clone",R[148],E,92,[[["self"]],["key"]]],[11,"clone",R[125],E,59,[[["self"]],[R[126]]]],[11,"as_ref",R[135],E,74,[[["self"]],[R[39]]]],[11,"as_ref",E,E,75,[[["self"]],[R[39]]]],[11,"as_ref",R[50],E,27,[[["self"]],[R[45]]]],[11,"as_ref",E,E,26,[[["self"]],[R[45]]]],[11,"as_ref",R[137],E,77,[[["self"]],[R[67]]]],[11,"as_ref",E,E,78,[[["self"]],[R[67]]]],[11,R[152],R[125],E,59,[[["self"],[R[126]]],[[R[41],[R[151]]],[R[151]]]]],[11,"lt",E,E,59,[[["self"],[R[126]]],["bool"]]],[11,"le",E,E,59,[[["self"],[R[126]]],["bool"]]],[11,"gt",E,E,59,[[["self"],[R[126]]],["bool"]]],[11,"ge",E,E,59,[[["self"],[R[126]]],["bool"]]],[11,"eq",R[137],E,28,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["ucred"]],["bool"]]],[11,"eq",R[125],E,59,[[["self"],[R[126]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[126]]],["bool"]]],[11,"from",R[7],E,0,[[["file"]],["self"]]],[11,"from",E,E,1,[[[R[5]]],[R[5]]]],[11,"from",R[77],E,9,[[[R[159],[R[158]]],[R[158]]],["self"]]],[11,"from",E,E,9,[[[R[159]],[R[158],[R[159]]]],["self"]]],[11,"from",R[139],E,32,[[["stdcommand"]],[R[93]]]],[11,"from",R[144],E,45,[[],[R[104]]]],[11,"from",E,E,46,[[],[R[100]]]],[11,"from",E,E,46,[[[R[104]]],[R[100]]]],[11,"from",R[105],E,48,[[[T]],["self"]]],[11,"from",R[77],E,63,[[["joinerror"]],["error"]]],[11,"from",R[125],E,59,[[[R[126]]],[R[126]]]],[11,"from",R[77],E,63,[[["elapsed"]],["error"]]],[11,R[264],R[105],E,82,[[["self"]]]],[11,"hash",R[137],E,28,[[["self"],["__h"]]]],[11,"add",R[125],E,59,[[[R[42]]],[R[126]]]],[11,"sub",E,E,59,[[[R[126]]],[R[42]]]],[11,"sub",E,E,59,[[[R[42]]],[R[126]]]],[11,R[160],E,E,59,[[["self"],[R[42]]]]],[11,R[161],E,E,59,[[["self"],[R[42]]]]],[11,"deref",R[105],E,82,[[["self"]]]],[11,"deref",R[114],E,86,[[["self"]],[T]]],[11,"fmt",R[7],E,0,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,2,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,3,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[77],E,5,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,6,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,64,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,65,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,66,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,7,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,67,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,68,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,8,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,9,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,10,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,69,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,70,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,11,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,71,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,72,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,12,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,13,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[33],E,22,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[135],E,73,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,74,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,75,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[33],E,23,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,25,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[50],E,27,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,26,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,24,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[33],E,29,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[137],E,76,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[33],E,30,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[137],E,77,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,78,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[33],E,31,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[137],E,28,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[139],E,32,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,33,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,79,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,80,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,81,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[141],E,34,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,35,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,36,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[142],E,37,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,38,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[105],E,39,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,40,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[143],E,42,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,41,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,44,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,43,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[144],E,45,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,46,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,83,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,47,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,84,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[105],E,48,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,82,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[110],E,50,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,51,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[145],E,85,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,49,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[114],E,52,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,53,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,86,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[146],E,87,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[147],E,88,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,89,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,54,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[148],E,55,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,56,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,92,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[125],E,57,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,58,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,59,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,60,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,61,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,91,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,62,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[50],E,24,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[144],E,45,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,46,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,83,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,47,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,84,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[105],E,82,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[145],E,85,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,49,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[146],E,87,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[147],E,88,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[125],E,58,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,91,[[["self"],[R[150]]],[R[10]]]],[11,R[130],R[33],R[162],22,[[[R[35]]],[R[10]]]],[11,R[130],E,R[162],23,[[[R[39]]],[R[10]]]],[11,R[130],E,R[162],25,[[[R[45]]],[R[10]]]],[11,R[130],E,R[162],29,[[[R[57]]],[R[10]]]],[11,R[130],E,R[162],30,[[[R[63]]],[R[10]]]],[11,R[130],E,R[162],31,[[[R[67]]],[R[10]]]],[11,R[163],R[7],E,0,[[["self"]],["rawfd"]]],[11,R[163],R[33],E,22,[[["self"]],["rawfd"]]],[11,R[163],E,E,23,[[["self"]],["rawfd"]]],[11,R[163],E,E,25,[[["self"]],["rawfd"]]],[11,R[163],E,E,29,[[["self"]],["rawfd"]]],[11,R[163],E,E,30,[[["self"]],["rawfd"]]],[11,R[163],E,E,31,[[["self"]],["rawfd"]]],[11,R[163],R[139],E,79,[[["self"]],["rawfd"]]],[11,R[163],E,E,80,[[["self"]],["rawfd"]]],[11,R[163],E,E,81,[[["self"]],["rawfd"]]],[11,"ino",R[7],E,3,[[["self"]],["u64"]]],[11,"poll",R[77],E,68,[[["pin"],["self"],[R[11]]],["poll"]]],[11,"poll",E,E,69,[[["pin"],["self"],[R[11]]],[[R[10],["u64"]],["poll",[R[10]]]]]],[11,"poll",R[139],E,33,[[["pin"],["self"],[R[11]]],["poll"]]],[11,"poll",R[110],E,51,[[["pin"],["self"],[R[11]]],["poll"]]],[11,"poll",R[147],E,89,[[["pin"],["self"],[R[11]]],["poll"]]],[11,"poll",R[125],E,57,[[["pin"],["self"],[R[11]]],["poll"]]],[11,"poll",E,E,61,[[["pin"],["self"],[R[11]]],["poll"]]],[11,R[164],R[7],E,2,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],R[77],E,11,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],E,E,12,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],R[135],E,73,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],R[137],E,76,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],R[142],E,38,[[["self"],[R[11]],["pin"]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],R[143],E,41,[[["self"],[R[11]],["pin"]],[[R[41]],["poll",[R[41]]]]]],[11,R[164],E,E,43,[[["self"],[R[11]],["pin"]],[[R[41]],["poll",[R[41]]]]]],[11,R[164],R[114],E,52,[[["self"],[R[11]],["pin"]],[[R[41]],["poll",[R[41]]]]]],[11,R[164],R[125],E,60,[[["pin"],["self"],[R[11]]],[[R[41],[R[126]]],["poll",[R[41]]]]]],[11,R[164],E,E,62,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,"new",R[77],"Creates a new I/O error from a known kind of error as well…",63,[[[R[149]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",63,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",63,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",63,[[["self"]],[[R[41],["i32"]],["i32"]]]],[11,R[16],E,"Returns a reference to the inner error wrapped by this…",63,[[["self"]],[["error"],[R[41],["error"]]]]],[11,R[17],E,"Returns a mutable reference to the inner error wrapped by…",63,[[["self"]],[["error"],[R[41],["error"]]]]],[11,R[15],E,"Consumes the `Error`, returning its inner error (if any).",63,[[],[[R[41],["box"]],["box",["error"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",63,[[["self"]],[R[149]]]],[11,R[76],E,R[78],15,[[["self"]],["bool"]]],[11,R[82],E,R[25],15,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[91],E,R[92],17,[[["self"],["b"],["pin"],[R[11]]],[[R[10],["usize","error"]],["poll",[R[10]]]]]],[11,R[165],E,R[166],18,[[["vec"],["self"],["u8"]],[R[167]]]],[11,R[168],E,R[169],18,[[["self"],["string"]],["readline"]]],[11,"split",E,R[170],18,[[["u8"]],["split"]]],[11,"lines",E,R[171],18,[[],["lines"]]],[11,"chain",E,R[172],19,[[["r"]],["chain"]]],[11,"read",E,R[25],19,[[["self"]],["read"]]],[11,R[270],E,R[25],19,[[["b"],["self"]],["readbuf"]]],[11,R[173],E,R[174],19,[[["self"]],[R[175]]]],[11,"read_u8",E,R[176],19,[[["self"]],[["readu8"],["self"]]]],[11,"read_i8",E,R[177],19,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16",E,R[178],19,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16",E,R[179],19,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32",E,R[180],19,[[["self"]],[["readu32"],["self"]]]],[11,"read_i32",E,R[181],19,[[["self"]],[["self"],["readi32"]]]],[11,"read_u64",E,R[182],19,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64",E,R[183],19,[[["self"]],[["readi64"],["self"]]]],[11,R[184],E,R[185],19,[[["self"]],[["readu128"],["self"]]]],[11,R[186],E,R[187],19,[[["self"]],[["readi128"],["self"]]]],[11,R[188],E,R[189],19,[[["vec"],["self"]],[R[190]]]],[11,R[26],E,R[191],19,[[["self"],["string"]],[R[192]]]],[11,"take",E,R[193],19,[[["u64"]],["take"]]],[11,"seek",E,R[194],20,[[["self"],[R[28]]],["seek"]]],[11,"write",E,R[195],21,[[["self"]],["write"]]],[11,R[196],E,R[197],21,[[["b"],["self"]],["writebuf"]]],[11,R[198],E,R[199],21,[[["self"]],["writeall"]]],[11,"write_u8",E,R[29],21,[[["self"],["u8"]],[["writeu8"],["self"]]]],[11,"write_i8",E,R[29],21,[[["i8"],["self"]],[["self"],["writei8"]]]],[11,R[200],E,R[201],21,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,R[202],E,R[203],21,[[["self"],["i16"]],[["writei16"],["self"]]]],[11,R[204],E,R[205],21,[[["u32"],["self"]],[["writeu32"],["self"]]]],[11,R[206],E,R[207],21,[[["self"],["i32"]],[["writei32"],["self"]]]],[11,R[208],E,R[209],21,[[["self"],["u64"]],[["self"],["writeu64"]]]],[11,R[210],E,R[211],21,[[["i64"],["self"]],[["writei64"],["self"]]]],[11,R[212],E,R[213],21,[[["self"],["u128"]],[["self"],[R[214]]]]],[11,R[215],E,R[216],21,[[["i128"],["self"]],[["self"],[R[217]]]]],[11,"flush",E,R[218],21,[[["self"]],["flush"]]],[11,R[30],E,R[219],21,[[["self"]],[R[30]]]],[18,"SECOND",R[125],"The duration of one second.",90,N],[18,"MILLISECOND",E,"The duration of one millisecond.",90,N],[18,"MICROSECOND",E,"The duration of one microsecond.",90,N],[18,"NANOSECOND",E,"The duration of one nanosecond.",90,N],[11,"new",E,R[220],90,[[["u32"],["u64"]],[R[42]]]],[11,"from_secs",E,R[220],90,[[["u64"]],[R[42]]]],[11,"from_millis",E,R[220],90,[[["u64"]],[R[42]]]],[11,"from_micros",E,R[220],90,[[["u64"]],[R[42]]]],[11,"from_nanos",E,R[220],90,[[["u64"]],[R[42]]]],[11,"as_secs",E,"Returns the number of whole seconds contained by this…",90,[[["self"]],["u64"]]],[11,"subsec_millis",E,R[221],90,[[["self"]],["u32"]]],[11,"subsec_micros",E,R[221],90,[[["self"]],["u32"]]],[11,"subsec_nanos",E,"Returns the fractional part of this `Duration`, in…",90,[[["self"]],["u32"]]],[11,"as_millis",E,"Returns the total number of whole milliseconds contained…",90,[[["self"]],["u128"]]],[11,"as_micros",E,"Returns the total number of whole microseconds contained…",90,[[["self"]],["u128"]]],[11,"as_nanos",E,"Returns the total number of nanoseconds contained by this…",90,[[["self"]],["u128"]]],[11,R[222],E,"Checked `Duration` addition. Computes `self + other`,…",90,[[[R[42]]],[[R[41],[R[42]]],[R[42]]]]],[11,R[223],E,"Checked `Duration` subtraction. Computes `self - other`,…",90,[[[R[42]]],[[R[41],[R[42]]],[R[42]]]]],[11,"checked_mul",E,"Checked `Duration` multiplication. Computes `self *…",90,[[["u32"]],[[R[41],[R[42]]],[R[42]]]]],[11,"checked_div",E,"Checked `Duration` division. Computes `self / other`,…",90,[[["u32"]],[[R[41],[R[42]]],[R[42]]]]],[11,"as_secs_f64",E,R[224],90,[[["self"]],["f64"]]],[11,"as_secs_f32",E,R[224],90,[[["self"]],["f32"]]],[11,"from_secs_f64",E,R[220],90,[[["f64"]],[R[42]]]],[11,"from_secs_f32",E,R[220],90,[[["f32"]],[R[42]]]],[11,"mul_f64",E,"Multiplies `Duration` by `f64`.",90,[[["f64"]],[R[42]]]],[11,"mul_f32",E,"Multiplies `Duration` by `f32`.",90,[[["f32"]],[R[42]]]],[11,"div_f64",E,"Divide `Duration` by `f64`.",90,[[["f64"]],[R[42]]]],[11,"div_f32",E,"Divide `Duration` by `f32`.",90,[[["f32"]],[R[42]]]],[11,"div_duration_f64",E,"Divide `Duration` by `Duration` and return `f64`.",90,[[[R[42]]],["f64"]]],[11,"div_duration_f32",E,"Divide `Duration` by `Duration` and return `f32`.",90,[[[R[42]]],["f32"]]]],"p":[[3,"File"],[3,R[225]],[3,"ReadDir"],[3,"DirEntry"],[4,R[226]],[3,R[227]],[3,R[228]],[3,R[31]],[3,R[229]],[3,R[230]],[3,R[231]],[3,"Lines"],[3,"Split"],[3,"Take"],[8,R[70]],[8,R[75]],[8,R[232]],[8,R[83]],[8,R[233]],[8,R[234]],[8,R[235]],[8,R[236]],[3,R[237]],[3,R[238]],[3,R[239]],[3,R[240]],[3,"RecvHalf"],[3,"SendHalf"],[3,"UCred"],[3,R[241]],[3,R[242]],[3,R[243]],[3,"Command"],[3,"Child"],[3,R[307]],[3,"Handle"],[3,"Runtime"],[3,R[244]],[3,"Signal"],[3,"Barrier"],[3,R[245]],[3,R[112]],[3,"Sender"],[3,R[246]],[3,R[247]],[3,R[113]],[4,R[248]],[4,R[109]],[3,"Mutex"],[4,R[109]],[3,"Sender"],[3,R[112]],[3,R[112]],[3,"Sender"],[3,"LocalSet"],[3,R[122]],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Throttle"],[3,"Error"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[32]],[3,"Seek"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,R[56]],[3,R[31]],[3,R[32]],[3,R[56]],[3,R[31]],[3,R[32]],[3,R[249]],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[108]],[3,R[253]],[3,R[108]],[3,"Ref"],[3,R[113]],[3,R[254]],[3,R[255]],[3,"Duration"],[3,"Elapsed"],[3,"Key"]]};
searchIndex["tokio_macros"]={"doc":"Macros for use with Tokio","i":[[23,"main","tokio_macros",R[256],N,N],[23,"test",E,R[257],N,N]],"p":[]};
searchIndex["tokio_test"]={"doc":"Tokio and Futures based testing utilites","i":[[5,R[258],R[261],"Runs the provided future, blocking the current thread…",N,[[["future"]]]],[0,"io",E,"A mock type implementing [`AsyncRead`] and [`AsyncWrite`].",N,N],[3,"Mock",R[262],"An I/O object that follows a predefined script.",N,N],[3,"Handle",E,"A handle to send additional actions to the related `Mock`.",N,N],[3,R[307],E,"Builds `Mock` instances.",N,N],[11,"new",E,"Return a new, empty `Builder.",0,[[],["self"]]],[11,"read",E,R[259],0,[[["self"]],["self"]]],[11,"write",E,R[260],0,[[["self"]],["self"]]],[11,"wait",E,"Sequence a wait.",0,[[["self"],[R[42]]],["self"]]],[11,"build",E,"Build a `Mock` value according to the defined script.",0,[[["self"]],["mock"]]],[11,"build_with_handle",E,"Build a `Mock` value paired with a handle",0,[[["self"]]]],[11,"read",E,R[259],1,[[["self"]],["self"]]],[11,"write",E,R[260],1,[[["self"]],["self"]]],[0,"task",R[261],"Futures task based helpers",N,N],[3,"Spawn",R[263],"Future spawned on a mock task",N,N],[5,"spawn",E,"TOOD: dox",N,[[[T]],["spawn"]]],[11,R[15],E,"Consume `self` returning the inner value",2,[[],[T]]],[11,"is_woken",E,"Returns `true` if the inner future has received a wake…",2,[[["self"]],["bool"]]],[11,"waker_ref_count",E,"Returns the number of references to the task waker",2,[[["self"]],["usize"]]],[11,"enter",E,"Enter the task context",2,[[["self"],["f"]],["r"]]],[11,"poll",E,"Poll a future",2,[[["self"]],["poll"]]],[11,R[164],E,"Poll a stream",2,[[["self"]],[["poll",[R[41]]],[R[41]]]]],[14,"assert_ready",R[261],"Assert a `Poll` is ready, returning the value.",N,N],[14,"assert_ready_ok",E,"Assert a `Poll<Result<...>>` is ready and `Ok`, returning…",N,N],[14,"assert_ready_err",E,"Assert a `Poll<Result<...>>` is ready and `Err`, returning…",N,N],[14,"assert_pending",E,"Assert a `Poll` is pending.",N,N],[14,"assert_ready_eq",E,"Assert if a poll is ready and check for equality on the…",N,N],[14,"assert_ok",E,"Asserts that the expression evaluates to `Ok` and returns…",N,N],[14,"assert_err",E,"Asserts that the expression evaluates to `Err` and returns…",N,N],[11,"into",R[262],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[130],E,E,3,[[[U]],[R[10]]]],[11,R[131],E,E,3,[[],[R[10]]]],[11,R[129],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[133],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[130],E,E,1,[[[U]],[R[10]]]],[11,R[131],E,E,1,[[],[R[10]]]],[11,R[129],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[133],E,E,1,[[["self"]],["typeid"]]],[11,R[138],E,E,0,[[["self"]],[T]]],[11,R[132],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[130],E,E,0,[[[U]],[R[10]]]],[11,R[131],E,E,0,[[],[R[10]]]],[11,R[129],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[133],E,E,0,[[["self"]],["typeid"]]],[11,"into",R[263],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[130],E,E,2,[[[U]],[R[10]]]],[11,R[131],E,E,2,[[],[R[10]]]],[11,R[129],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[133],E,E,2,[[["self"]],["typeid"]]],[11,"load",E,E,2,[[["self"]]]],[11,"load",E,E,2,[[["self"]],["dynguard"]]],[11,R[156],R[262],E,0,[[],[R[280]]]],[11,"clone",E,E,0,[[["self"]],[R[280]]]],[11,R[264],R[263],E,2,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",R[262],E,3,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,0,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[263],E,2,[[["self"],[R[150]]],[R[10]]]],[11,R[79],R[262],E,3,[[["self"],[R[11]],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[85],E,E,3,[[["self"],[R[11]],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[91],E,E,3,[[["self"],[R[11]],["b"],["pin"]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,3,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,3,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]]],"p":[[3,R[307]],[3,"Handle"],[3,"Spawn"],[3,"Mock"]]};
searchIndex["tokio_tls"]={"doc":"Async TLS streams","i":[[3,R[267],"tokio_tls","A wrapper around an underlying raw stream which implements…",N,N],[3,R[268],E,"A wrapper around a `native_tls::TlsConnector`, providing…",N,N],[3,R[269],E,"A wrapper around a `native_tls::TlsAcceptor`, providing an…",N,N],[11,R[16],E,"Returns a shared reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[17],E,"Returns a mutable reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[58],E,"Connects the provided stream with this connector, assuming…",1,[[["self"],["str"],["s"]]]],[11,"accept",E,"Accepts a new client connection with the provided stream.",2,[[["self"],["s"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[130],E,E,0,[[[U]],[R[10]]]],[11,R[131],E,E,0,[[],[R[10]]]],[11,R[129],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[133],E,E,0,[[["self"]],["typeid"]]],[11,R[138],E,E,1,[[["self"]],[T]]],[11,R[132],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[130],E,E,1,[[[U]],[R[10]]]],[11,R[131],E,E,1,[[],[R[10]]]],[11,R[129],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[133],E,E,1,[[["self"]],["typeid"]]],[11,R[138],E,E,2,[[["self"]],[T]]],[11,R[132],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[130],E,E,2,[[[U]],[R[10]]]],[11,R[131],E,E,2,[[],[R[10]]]],[11,R[129],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[133],E,E,2,[[["self"]],["typeid"]]],[11,"clone",E,E,1,[[["self"]],[R[265]]]],[11,"clone",E,E,2,[[["self"]],[R[266]]]],[11,"from",E,E,1,[[[R[265]]],[R[265]]]],[11,"from",E,E,2,[[[R[266]]],[R[266]]]],[11,"fmt",E,E,0,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,2,[[["self"],[R[150]]],[R[10]]]],[11,R[76],E,E,0,[[["self"]],["bool"]]],[11,R[79],E,E,0,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[85],E,E,0,[[["self"],["pin"],[R[11]]],[[R[10],["usize"]],["poll",[R[10]]]]]],[11,R[87],E,E,0,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]],[11,R[89],E,E,0,[[["pin"],["self"],[R[11]]],[["poll",[R[10]]],[R[10]]]]]],"p":[[3,R[267]],[3,R[268]],[3,R[269]]]};
searchIndex["tokio_util"]={"doc":"Utilities for working with Tokio.","i":[[0,"codec",R[289],"Utilities for encoding and decoding frames.",N,N],[3,R[303],R[285],"A simple `Codec` implementation that just ships bytes…",N,N],[3,"Framed",E,R[290],N,N],[3,R[301],E,"`FramedParts` contains an export of the data of a Framed…",N,N],[12,"io",E,"The inner transport used to read bytes to and write bytes to",0,N],[12,"codec",E,"The codec",0,N],[12,R[270],E,"The buffer with read but unprocessed data.",0,N],[12,R[196],E,"A buffer with unprocessed data which are not written yet.",0,N],[3,R[304],E,"A `Stream` of messages decoded from an `AsyncRead`.",N,N],[3,R[305],E,"A `Sink` of frames encoded to an `AsyncWrite`.",N,N],[3,R[308],E,"A simple `Codec` implementation that splits up data into…",N,N],[4,R[302],E,"An error occured while encoding or decoding a line.",N,N],[13,"MaxLineLengthExceeded",E,"The maximum line length was exceeded.",1,N],[13,"Io",E,"An IO error occured.",1,N],[11,"new",E,"Creates a new `BytesCodec` for shipping around raw bytes.",2,[[],[R[295]]]],[11,"new",E,R[271],3,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[271],3,[[[R[272]]],["framed"]]],[11,R[16],E,R[273],3,[[["self"]],[T]]],[11,R[17],E,R[274],3,[[["self"]],[T]]],[11,"codec",E,"Returns a reference to the underlying codec wrapped by…",3,[[["self"]],[U]]],[11,"codec_mut",E,"Returns a mutable reference to the underlying codec…",3,[[["self"]],[U]]],[11,R[275],E,R[276],3,[[["self"]],[R[286]]]],[11,R[15],E,"Consumes the `Frame`, returning its underlying I/O stream.",3,[[],[T]]],[11,"into_parts",E,"Consumes the `Frame`, returning its underlying I/O stream,…",3,[[],[R[272]]]],[11,"new",E,"Create a new, default, `FramedParts`",0,[[[U],[T]],[R[272]]]],[11,"new",E,"Creates a new `FramedRead` with the given `decoder`.",4,[[["d"],[T]],[R[283]]]],[11,R[16],E,R[273],4,[[["self"]],[T]]],[11,R[17],E,R[274],4,[[["self"]],[T]]],[11,R[15],E,"Consumes the `FramedRead`, returning its underlying I/O…",4,[[],[T]]],[11,"decoder",E,R[277],4,[[["self"]],["d"]]],[11,"decoder_mut",E,R[278],4,[[["self"]],["d"]]],[11,R[275],E,R[276],4,[[["self"]],[R[286]]]],[11,"new",E,"Creates a new `FramedWrite` with the given `encoder`.",5,[[[T],["e"]],[R[284]]]],[11,R[16],E,R[273],5,[[["self"]],[T]]],[11,R[17],E,R[274],5,[[["self"]],[T]]],[11,R[15],E,"Consumes the `FramedWrite`, returning its underlying I/O…",5,[[],[T]]],[11,"encoder",E,R[277],5,[[["self"]],["e"]]],[11,"encoder_mut",E,R[278],5,[[["self"]],["e"]]],[0,"length_delimited",E,"Frame a stream of bytes based on a length prefix",N,N],[3,R[307],R[291],"Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,R[310],E,"An error when the number of bytes read is more than max…",N,N],[3,R[306],E,"A codec for frames delimited by a frame head specifying…",N,N],[11,"new",E,"Creates a new `LengthDelimitedCodec` with the default…",6,[[],["self"]]],[11,R[280],E,R[279],6,[[],[R[280]]]],[11,R[281],E,"Returns the current max frame setting",6,[[["self"]],["usize"]]],[11,"set_max_frame_length",E,"Updates the max frame setting.",6,[[["self"],["usize"]]]],[11,"new",E,R[279],7,[[],[R[280]]]],[11,"big_endian",E,"Read the length field as a big endian integer",7,[[["self"]],["self"]]],[11,"little_endian",E,"Read the length field as a little endian integer",7,[[["self"]],["self"]]],[11,"native_endian",E,"Read the length field as a native endian integer",7,[[["self"]],["self"]]],[11,R[281],E,"Sets the max frame length",7,[[["self"],["usize"]],["self"]]],[11,"length_field_length",E,"Sets the number of bytes used to represent the length field",7,[[["self"],["usize"]],["self"]]],[11,"length_field_offset",E,"Sets the number of bytes in the header before the length…",7,[[["self"],["usize"]],["self"]]],[11,"length_adjustment",E,"Delta between the payload length specified in the header…",7,[[["self"],["isize"]],["self"]]],[11,"num_skip",E,"Sets the number of bytes to skip before reading the payload",7,[[["self"],["usize"]],["self"]]],[11,"new_codec",E,"Create a configured length delimited `LengthDelimitedCodec`",7,[[["self"]],[R[282]]]],[11,"new_read",E,"Create a configured length delimited `FramedRead`",7,[[["self"],[T]],[[R[282]],[R[283],[R[282]]]]]],[11,"new_write",E,"Create a configured length delimited `FramedWrite`",7,[[["self"],[T]],[[R[284],[R[282]]],[R[282]]]]],[11,"new_framed",E,"Create a configured length delimited `Framed`",7,[[["self"],[T]],[["framed",[R[282]]],[R[282]]]]],[11,"new",R[285],"Returns a `LinesCodec` for splitting up data into lines.",8,[[],[R[296]]]],[11,"new_with_max_length",E,"Returns a `LinesCodec` with a maximum line length limit.",8,[[["usize"]],["self"]]],[11,"max_length",E,"Returns the maximum line length when decoding.",8,[[["self"]],["usize"]]],[8,"Decoder",E,"Decoding of frames via buffers.",N,N],[16,"Item",E,"The type of decoded frames.",9,N],[16,"Error",E,"The type of unrecoverable frame decoding errors.",9,N],[10,"decode",E,"Attempts to decode a frame from the provided buffer of…",9,[[["self"],[R[286]]],[[R[41]],[R[10],[R[41]]]]]],[11,R[294],E,R[300],9,[[["self"],[R[286]]],[[R[41]],[R[10],[R[41]]]]]],[11,"framed",E,R[271],9,[[[R[288]],[R[287]],["sized"]],[[R[287]],["framed"],[R[288]],["sized"]]]],[8,"Encoder",E,"Trait of helper objects to write out messages as bytes,…",N,N],[16,"Item",E,"The type of items consumed by the `Encoder`",10,N],[16,"Error",E,"The type of encoding errors.",10,N],[10,"encode",E,"Encodes a frame into the buffer provided.",10,[[["self"],[R[286]]],[R[10]]]],[0,"udp",R[289],"UDP framing",N,N],[3,R[309],R[292],R[290],N,N],[11,"new",E,"Create a new `UdpFramed` backed by the given socket and…",11,[[[R[45]],["c"]],["udpframed"]]],[11,R[16],E,R[273],11,[[["self"]],[R[45]]]],[11,R[17],E,R[274],11,[[["self"]],[R[45]]]],[11,R[15],E,"Consumes the `Framed`, returning its underlying I/O stream.",11,[[],[R[45]]]],[11,R[138],R[285],E,2,[[["self"]],[T]]],[11,R[132],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[130],E,E,2,[[[U]],[R[10]]]],[11,R[131],E,E,2,[[],[R[10]]]],[11,R[129],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[133],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[130],E,E,3,[[[U]],[R[10]]]],[11,R[131],E,E,3,[[],[R[10]]]],[11,R[129],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[133],E,E,3,[[["self"]],["typeid"]]],[11,R[134],E,E,3,[[["pin"],["s"],[R[11]]],[["poll",[R[41]]],[R[41],[R[10]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[130],E,E,0,[[[U]],[R[10]]]],[11,R[131],E,E,0,[[],[R[10]]]],[11,R[129],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[133],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[130],E,E,4,[[[U]],[R[10]]]],[11,R[131],E,E,4,[[],[R[10]]]],[11,R[129],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[133],E,E,4,[[["self"]],["typeid"]]],[11,R[134],E,E,4,[[["pin"],["s"],[R[11]]],[["poll",[R[41]]],[R[41],[R[10]]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[130],E,E,5,[[[U]],[R[10]]]],[11,R[131],E,E,5,[[],[R[10]]]],[11,R[129],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[133],E,E,5,[[["self"]],["typeid"]]],[11,R[134],E,E,5,[[["pin"],["s"],[R[11]]],[["poll",[R[41]]],[R[41],[R[10]]]]]],[11,R[138],E,E,8,[[["self"]],[T]]],[11,R[132],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[130],E,E,8,[[[U]],[R[10]]]],[11,R[131],E,E,8,[[],[R[10]]]],[11,R[129],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[133],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[136],E,E,1,[[["self"]],["string"]]],[11,R[130],E,E,1,[[[U]],[R[10]]]],[11,R[131],E,E,1,[[],[R[10]]]],[11,R[129],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[133],E,E,1,[[["self"]],["typeid"]]],[11,R[138],R[291],E,7,[[["self"]],[T]]],[11,R[132],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[130],E,E,7,[[[U]],[R[10]]]],[11,R[131],E,E,7,[[],[R[10]]]],[11,R[129],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[133],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[136],E,E,12,[[["self"]],["string"]]],[11,R[130],E,E,12,[[[U]],[R[10]]]],[11,R[131],E,E,12,[[],[R[10]]]],[11,R[129],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[133],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[130],E,E,6,[[[U]],[R[10]]]],[11,R[131],E,E,6,[[],[R[10]]]],[11,R[129],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[133],E,E,6,[[["self"]],["typeid"]]],[11,"into",R[292],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[130],E,E,11,[[[U]],[R[10]]]],[11,R[131],E,E,11,[[],[R[10]]]],[11,R[129],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[133],E,E,11,[[["self"]],["typeid"]]],[11,R[134],E,E,11,[[["pin"],["s"],[R[11]]],[["poll",[R[41]]],[R[41],[R[10]]]]]],[11,"decode",R[285],E,2,[[["self"],[R[286]]],[["error"],[R[41],[R[286]]],[R[10],[R[41],"error"]]]]],[11,"decode",R[291],E,6,[[["self"],[R[286]]],[[R[10],[R[41]]],[R[41],[R[286]]]]]],[11,"decode",R[285],E,8,[[["self"],[R[286]]],[[R[10],[R[41],R[293]]],[R[41],["string"]],[R[293]]]]],[11,R[294],E,E,8,[[["self"],[R[286]]],[[R[10],[R[41],R[293]]],[R[41],["string"]],[R[293]]]]],[11,"encode",E,E,2,[[["self"],["bytes"],[R[286]]],[["error"],[R[10],["error"]]]]],[11,"encode",R[291],E,6,[[["self"],["bytes"],[R[286]]],[["error"],[R[10],["error"]]]]],[11,"encode",R[285],E,8,[[["self"],["string"],[R[286]]],[[R[293]],[R[10],[R[293]]]]]],[11,R[156],E,E,2,[[],[R[295]]]],[11,R[156],R[291],E,6,[[],["self"]]],[11,R[156],E,E,7,[[],["self"]]],[11,R[156],R[285],E,8,[[],["self"]]],[11,"clone",E,E,2,[[["self"]],[R[295]]]],[11,"clone",R[291],E,7,[[["self"]],[R[280]]]],[11,"clone",R[285],E,8,[[["self"]],[R[296]]]],[11,R[152],E,E,2,[[["self"],[R[295]]],[[R[41],[R[151]]],[R[151]]]]],[11,"lt",E,E,2,[[["self"],[R[295]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[295]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[295]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[295]]],["bool"]]],[11,R[152],E,E,8,[[["self"],[R[296]]],[[R[41],[R[151]]],[R[151]]]]],[11,"lt",E,E,8,[[["self"],[R[296]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[296]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[296]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[296]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[295]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[295]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[296]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[296]]],["bool"]]],[11,"cmp",E,E,2,[[["self"],[R[295]]],[R[151]]]],[11,"cmp",E,E,8,[[["self"],[R[296]]],[R[151]]]],[11,"from",E,E,1,[[["error"]],[R[293]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,3,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,0,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,4,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,5,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[291],E,7,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,6,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,12,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[285],E,8,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",E,E,1,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[292],E,11,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[291],E,12,[[["self"],[R[150]]],[R[10]]]],[11,"fmt",R[285],E,1,[[["self"],[R[150]]],[R[10]]]],[11,R[164],E,E,3,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],E,E,4,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],E,E,5,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[164],R[292],E,11,[[["pin"],["self"],[R[11]]],[["poll",[R[41]]],[R[41]]]]],[11,R[297],R[285],E,3,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[298],E,E,3,[[["pin"],["self"],["i"]],[R[10]]]],[11,R[87],E,E,3,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[299],E,E,3,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[297],E,E,4,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[298],E,E,4,[[["pin"],["self"],["i"]],[R[10]]]],[11,R[87],E,E,4,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[299],E,E,4,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[297],E,E,5,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[298],E,E,5,[[["pin"],["self"],["i"]],[R[10]]]],[11,R[87],E,E,5,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[299],E,E,5,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[297],R[292],E,11,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[298],E,E,11,[[["pin"],["self"]],[R[10]]]],[11,R[87],E,E,11,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[299],E,E,11,[[["pin"],["self"],[R[11]]],[[R[10]],["poll",[R[10]]]]]],[11,R[294],R[285],R[300],9,[[["self"],[R[286]]],[[R[41]],[R[10],[R[41]]]]]],[11,"framed",E,R[271],9,[[[R[288]],[R[287]],["sized"]],[[R[287]],["framed"],[R[288]],["sized"]]]]],"p":[[3,R[301]],[4,R[302]],[3,R[303]],[3,"Framed"],[3,R[304]],[3,R[305]],[3,R[306]],[3,R[307]],[3,R[308]],[8,"Decoder"],[8,"Encoder"],[3,R[309]],[3,R[310]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);